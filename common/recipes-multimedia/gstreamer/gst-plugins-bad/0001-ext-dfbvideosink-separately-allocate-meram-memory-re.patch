From eff4a151ef5bb7d486dd8998c0ba14b56812fea8 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Fri, 21 Jun 2013 14:53:24 +0900
Subject: [PATCH] ext/dfbvideosink: separately allocate meram memory regions
 for every icb

The hard-coded meram memory size which is expected at the maximum
for the overall icbs had been allocated. According to the MERAM spec,
the meram memory allocation must be aligned with the required size
units for each icb, which can be calculated with the expression in the
spec.
This change calculates the allocation size for each icb and
accordingly allocates them.
---
 ext/directfb/dfbvideosink.c | 79 ++++++++++++++++++++++++++++++++++-----------
 ext/directfb/dfbvideosink.h |  2 --
 2 files changed, 61 insertions(+), 20 deletions(-)

diff --git a/ext/directfb/dfbvideosink.c b/ext/directfb/dfbvideosink.c
index f2558e3..c08f4fd 100644
--- a/ext/directfb/dfbvideosink.c
+++ b/ext/directfb/dfbvideosink.c
@@ -1002,13 +1002,6 @@ gst_dfbvideosink_setup (GstDfbVideoSink * dfbvideosink)
     meram_write_reg (dfbvideosink->meram, regs, MEVCR1, val);
     meram_unlock_reg (dfbvideosink->meram, regs);
     dfbvideosink->icby[SRC].handle = dfbvideosink->icbc[SRC].handle = NULL;
-
-    dfbvideosink->meram_region_offset =
-        meram_alloc_memory_block (dfbvideosink->meram, 96);
-    if (dfbvideosink->meram_region_offset < 0) {
-      GST_ERROR_OBJECT (dfbvideosink, "failed meram memory block allocation");
-      goto beach;
-    }
   }
 
 #endif /* defined(HAVE_SHMERAM) */
@@ -1094,15 +1087,14 @@ gst_dfbvideosink_cleanup (GstDfbVideoSink * dfbvideosink)
       int i;
       gulong addr;
 
-      meram_free_memory_block (dfbvideosink->meram,
-          dfbvideosink->meram_region_offset, 96);
-
       for (i = 0; i < 2; i++) {
         if (dfbvideosink->icby[i].handle) {
           addr =
               meram_get_icb_address (dfbvideosink->meram,
               dfbvideosink->icby[i].handle, 0);
           uiomux_unregister ((void *) addr);
+          meram_free_icb_memory (dfbvideosink->meram,
+              dfbvideosink->icby[i].handle);
           meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[i].handle);
           dfbvideosink->icby[i].handle = NULL;
         }
@@ -1111,6 +1103,8 @@ gst_dfbvideosink_cleanup (GstDfbVideoSink * dfbvideosink)
               meram_get_icb_address (dfbvideosink->meram,
               dfbvideosink->icbc[i].handle, 0);
           uiomux_unregister ((void *) addr);
+          meram_free_icb_memory (dfbvideosink->meram,
+              dfbvideosink->icbc[i].handle);
           meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[i].handle);
           dfbvideosink->icbc[i].handle = NULL;
         }
@@ -1616,6 +1610,32 @@ beach:
 }
 
 #if defined(HAVE_SHMERAM)
+#define ALIGN2UP(_p, _w)                \
+{                                       \
+        (_p) = ((_w) - 1);              \
+        (_p) = (_p) | ((_p) >> 1);      \
+        (_p) = (_p) | ((_p) >> 2);      \
+        (_p) = (_p) | ((_p) >> 4);      \
+        (_p) = (_p) | ((_p) >> 8);      \
+        (_p) = (_p) | ((_p) >> 16);     \
+        (_p) += 1;                      \
+}
+
+/* return the offset rounded up to be aligned with the same units as
+   the required size for meram region in KB */
+static gint
+gst_dfbvideosink_get_meram_region_size (gint stride, guint bnm)
+{
+  guint bytes_per_line;
+
+  if (stride <= 1024)
+    bytes_per_line = 1024;
+  else
+    ALIGN2UP (bytes_per_line, stride);
+
+  return bytes_per_line * (bnm + 1) / 1024;
+}
+
 static void
 gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
     gint video_width, gint video_height)
@@ -1630,6 +1650,9 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
   gpointer data;
   GstStructure *structure;
   DFBSurfacePixelFormat pixel_format = DSPF_UNKNOWN;
+  guint bnm;
+  gint meram_offset;
+  gint meram_buf_size;
 
   if (video_width <= 0 || video_height <= 0)
     /* Deinitializing may be done in this case */
@@ -1657,6 +1680,7 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         meram_get_icb_address (dfbvideosink->meram,
         dfbvideosink->icby[SRC].handle, 0);
     uiomux_unregister ((void *) addr);
+    meram_free_icb_memory (dfbvideosink->meram, dfbvideosink->icby[SRC].handle);
     meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle);
   }
   dfbvideosink->icby[SRC].handle =
@@ -1667,15 +1691,19 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         ("Failed acquiring an ICB for the source Y plane"));
     return;
   }
+  bnm = 0x0f;                   /* The line number will be set as bnm + 1. */
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
-      MExxMCNF, 0x010f0000);
+      MExxMCNF, 0x01000000 | bnm << 16);
   meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle, MExxCTRL,
       &val);
   if (val & (7 << 4))
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
         MExxCTRL, val | 7 << 4);
+  meram_buf_size = gst_dfbvideosink_get_meram_region_size (stride, bnm);
+  meram_offset = meram_alloc_icb_memory (dfbvideosink->meram,
+      dfbvideosink->icby[SRC].handle, meram_buf_size);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
-      MExxCTRL, 0xa0000701);
+      MExxCTRL, 0xa0000701 | (meram_offset & 0x1ff) << 16);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
       MExxSSARB, 0);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
@@ -1715,6 +1743,7 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         meram_get_icb_address (dfbvideosink->meram,
         dfbvideosink->icbc[SRC].handle, 0);
     uiomux_unregister ((void *) addr);
+    meram_free_icb_memory (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle);
     meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle);
   }
   if (is_ycbcr (dfb2shvio_format (pixel_format)) && pixel_format != DSPF_UYVY) {
@@ -1726,15 +1755,19 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
           ("Failed acquiring an ICB for the source CbCr plane"));
       return;
     }
+    bnm = 0x0f;                 /* The line number will be set as bnm + 1. */
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
-        MExxMCNF, 0x010f0000);
+        MExxMCNF, 0x01000000 | bnm << 16);
     meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
         MExxCTRL, &val);
     if (val & (7 << 4))
       meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
           MExxCTRL, val | 7 << 4);
+    meram_buf_size = gst_dfbvideosink_get_meram_region_size (stride, bnm);
+    meram_offset = meram_alloc_icb_memory (dfbvideosink->meram,
+        dfbvideosink->icbc[SRC].handle, meram_buf_size);
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
-        MExxCTRL, 0xa0200701);
+        MExxCTRL, 0xa0000701 | (meram_offset & 0x1ff) << 16);
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
         MExxBSIZE,
         (((sliceheight / 2 + dfbvideosink->tile_boundary_c_offset -
@@ -1766,6 +1799,7 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         meram_get_icb_address (dfbvideosink->meram,
         dfbvideosink->icby[DST].handle, 0);
     uiomux_unregister ((void *) addr);
+    meram_free_icb_memory (dfbvideosink->meram, dfbvideosink->icby[DST].handle);
     meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle);
   }
   dfbvideosink->icby[DST].handle =
@@ -1776,15 +1810,19 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         ("Failed acquiring an ICB for the destination Y plane"));
     return;
   }
+  bnm = 0x03;                   /* The line number will be set as bnm + 1. */
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
-      MExxMCNF, 0x00030000);
+      MExxMCNF, bnm << 16);
   meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
       MExxCTRL, &val);
   if (val & (7 << 4))
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
         MExxCTRL, val | (7 << 4));
+  meram_buf_size = gst_dfbvideosink_get_meram_region_size (stride, bnm);
+  meram_offset = meram_alloc_icb_memory (dfbvideosink->meram,
+      dfbvideosink->icby[DST].handle, meram_buf_size);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
-      MExxCTRL, 0x90400702);
+      MExxCTRL, 0x90000702 | (meram_offset & 0x1ff) << 16);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
       MExxSSARB, 0);
   meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
@@ -1800,6 +1838,7 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
         meram_get_icb_address (dfbvideosink->meram,
         dfbvideosink->icbc[DST].handle, 0);
     uiomux_unregister ((void *) addr);
+    meram_free_icb_memory (dfbvideosink->meram, dfbvideosink->icbc[DST].handle);
     meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle);
   }
   if (is_ycbcr (dfb2shvio_format (dfbvideosink->pixel_format))
@@ -1812,15 +1851,19 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
           ("Failed acquiring an ICB for the destination CbCr plane"));
       return;
     }
+    bnm = 0x03;                 /* The line number will be set as bnm + 1. */
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
-        MExxMCNF, 0x10030000);
+        MExxMCNF, 0x10000000 | bnm << 16);
     meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
         MExxCTRL, &val);
     if (val & (7 << 4))
       meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
           MExxCTRL, val | (7 << 4));
+    meram_buf_size = gst_dfbvideosink_get_meram_region_size (stride, bnm);
+    meram_offset = meram_alloc_icb_memory (dfbvideosink->meram,
+        dfbvideosink->icbc[DST].handle, meram_buf_size);
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
-        MExxCTRL, 0x00500702);
+        MExxCTRL, 0x00000702 | (meram_offset & 0x1ff) << 16);
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
         MExxSSARB, 0);
     meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
diff --git a/ext/directfb/dfbvideosink.h b/ext/directfb/dfbvideosink.h
index 87dbf0d..165e308 100644
--- a/ext/directfb/dfbvideosink.h
+++ b/ext/directfb/dfbvideosink.h
@@ -179,8 +179,6 @@ struct _GstDfbVideoSink {
   gint tile_boundary_c_offset;
 
   gboolean require_clear_meram;
-
-  gint meram_region_offset;
 #endif /* defined(HAVE_SHMERAM) */
 #endif /* defined(HAVE_SHVIO) */
 
-- 
1.8.1.2

