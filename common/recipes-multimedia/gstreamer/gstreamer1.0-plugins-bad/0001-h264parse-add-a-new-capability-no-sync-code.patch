From 00f2872e67771e816d3b7285a26d34553ab95b82 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Fri, 7 Jun 2013 15:28:28 +0900
Subject: [PATCH 01/21] h264parse: add a new capability "no-sync-code"

This capability is to select whether the start code is put before nal.
If TRUE is specified, the start code insertion is performed.
It is valid only if stream-format is specified as byte-stream.
---
 gst/videoparsers/gsth264parse.c | 22 ++++++++++++++++++----
 gst/videoparsers/gsth264parse.h |  1 +
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/gst/videoparsers/gsth264parse.c b/gst/videoparsers/gsth264parse.c
index a778a94..e57dcd0 100644
--- a/gst/videoparsers/gsth264parse.c
+++ b/gst/videoparsers/gsth264parse.c
@@ -70,7 +70,8 @@ static GstStaticPadTemplate srctemplate = GST_STATIC_PAD_TEMPLATE ("src",
     GST_PAD_ALWAYS,
     GST_STATIC_CAPS ("video/x-h264, parsed = (boolean) true, "
         "stream-format=(string) { avc, byte-stream }, "
-        "alignment=(string) { au, nal }"));
+        "alignment=(string) { au, nal }, "
+        "no-sync-code=(boolean) { true, false }"));
 
 #define parent_class gst_h264_parse_parent_class
 G_DEFINE_TYPE (GstH264Parse, gst_h264_parse, GST_TYPE_BASE_PARSE);
@@ -195,6 +196,7 @@ gst_h264_parse_reset (GstH264Parse * h264parse)
 
   h264parse->align = GST_H264_PARSE_ALIGN_NONE;
   h264parse->format = GST_H264_PARSE_FORMAT_NONE;
+  h264parse->no_sync_code = TRUE;
 
   h264parse->last_report = GST_CLOCK_TIME_NONE;
   h264parse->push_codec = FALSE;
@@ -344,9 +346,13 @@ gst_h264_parse_negotiate (GstH264Parse * h264parse, gint in_format,
   }
 
   if (caps) {
+    GstStructure *s = gst_caps_get_structure (caps, 0);
+
     /* fixate to avoid ambiguity with lists when parsing */
     caps = gst_caps_fixate (caps);
     gst_h264_parse_format_from_caps (caps, &format, &align);
+    gst_structure_get_boolean (s, "no-sync-code", &h264parse->no_sync_code);
+
     gst_caps_unref (caps);
   }
 
@@ -376,15 +382,22 @@ gst_h264_parse_wrap_nal (GstH264Parse * h264parse, guint format, guint8 * data,
 
   GST_DEBUG_OBJECT (h264parse, "nal length %d", size);
 
-  buf = gst_buffer_new_allocate (NULL, 4 + size, NULL);
   if (format == GST_H264_PARSE_FORMAT_AVC) {
+    buf = gst_buffer_new_allocate (NULL, 4 + size, NULL);
     tmp = GUINT32_TO_BE (size << (32 - 8 * nl));
-  } else {
+  } else if (format == GST_H264_PARSE_FORMAT_BYTE && !h264parse->no_sync_code) {
+    buf = gst_buffer_new_allocate (NULL, 4 + size, NULL);
     /* HACK: nl should always be 4 here, otherwise this won't work. 
      * There are legit cases where nl in avc stream is 2, but byte-stream
      * SC is still always 4 bytes. */
     nl = 4;
     tmp = GUINT32_TO_BE (1);
+  } else {
+    GST_DEBUG_OBJECT (h264parse,
+        "no need to insert both sync code and nal unit size");
+    buf = gst_buffer_new_allocate (NULL, size, NULL);
+    gst_buffer_fill (buf, 0, data, size);
+    return buf;
   }
 
   gst_buffer_fill (buf, 0, &tmp, sizeof (guint32));
@@ -1798,7 +1811,8 @@ gst_h264_parse_set_caps (GstBaseParse * parse, GstCaps * caps)
         "stream-format", G_TYPE_STRING,
         gst_h264_parse_get_string (h264parse, TRUE, format),
         "alignment", G_TYPE_STRING,
-        gst_h264_parse_get_string (h264parse, FALSE, align), NULL);
+        gst_h264_parse_get_string (h264parse, FALSE, align),
+        "no-sync-code", G_TYPE_BOOLEAN, TRUE, NULL);
     /* negotiate with downstream, sets ->format and ->align */
     gst_h264_parse_negotiate (h264parse, format, in_caps);
     gst_caps_unref (in_caps);
diff --git a/gst/videoparsers/gsth264parse.h b/gst/videoparsers/gsth264parse.h
index 4f42e10..f1cb8ec 100644
--- a/gst/videoparsers/gsth264parse.h
+++ b/gst/videoparsers/gsth264parse.h
@@ -69,6 +69,7 @@ struct _GstH264Parse
   GstH264NalParser *nalparser;
   guint align;
   guint format;
+  gboolean no_sync_code;
   gint current_off;
 
   GstClockTime last_report;
-- 
1.8.1.2

