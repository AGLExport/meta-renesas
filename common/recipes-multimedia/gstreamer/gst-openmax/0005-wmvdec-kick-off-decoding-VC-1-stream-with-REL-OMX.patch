From 660f57f043783de99143fe0ce1d488577e2466ca Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Mon, 18 Jun 2012 11:04:05 +0900
Subject: [PATCH 05/39] wmvdec: kick off decoding VC-1 stream with REL OMX

The input sequence header must be sent to the REL OMX component before
pushing the frame data according to the spec.
This patch pushes the sequence header to base_filter's pad chain
function first, then it keeps pushing buffers received
from previous plugin.

Only the Simple/Main profiles are supported by this patch.
Advanced profile isn't supported yet.
---
 omx/gstomx_wmvdec.c |   59 +++++++++++++++++++++++++++++++++++++++++++++++++++
 omx/gstomx_wmvdec.h |    3 +++
 2 files changed, 62 insertions(+)

diff --git a/omx/gstomx_wmvdec.c b/omx/gstomx_wmvdec.c
index c9efe0d..2a21439 100644
--- a/omx/gstomx_wmvdec.c
+++ b/omx/gstomx_wmvdec.c
@@ -93,6 +93,61 @@ gst_omx_wmvdec_sink_setcaps (GstPad * pad, GstCaps * caps)
   return omx_wmvdec->base_setcapsfunc (pad, sink_caps);
 }
 
+static GstFlowReturn
+gst_omx_wmvdec_pad_chain (GstPad * pad, GstBuffer * buf)
+{
+  GstOmxBaseFilter *omx_base;
+  GstOmxWmvDec *omx_wmvdec;
+  guint size;
+  guint8 *data;
+
+  omx_base = GST_OMX_BASE_FILTER (GST_PAD_PARENT (pad));
+  omx_wmvdec = GST_OMX_WMVDEC (gst_pad_get_parent (pad));
+
+  GST_INFO_OBJECT (omx_wmvdec, "Enter");
+
+  /* split sequence parameter set and picture parameter set and other NALU */
+  /* parse AVCDecoderConfigurationRecord */
+  if (omx_wmvdec->codec_data != NULL) {
+    GstBuffer *SeqParabuf = NULL;
+    guint32 *u32ptr;
+    guint8 *u8ptr;
+    GstFlowReturn result;
+
+    size = GST_BUFFER_SIZE (omx_wmvdec->codec_data);
+    data = GST_BUFFER_DATA (omx_wmvdec->codec_data);
+
+    /* create a new buffer */
+    SeqParabuf = gst_buffer_new_and_alloc (SEQ_PARAM_BUF_SIZE);
+    u32ptr = (guint32 *) GST_BUFFER_DATA (SeqParabuf);
+
+    /* create sequence header */
+    u32ptr[0] = 0xC5000000;
+    u32ptr[1] = 0x00000004;
+    u8ptr = (guint8 *) & u32ptr[2];
+    u8ptr[0] = data[0];
+    u8ptr[1] = data[1];
+    u8ptr[2] = data[2];
+    u8ptr[3] = data[3];
+    u32ptr[3] = omx_wmvdec->height;
+    u32ptr[4] = omx_wmvdec->width;
+    u32ptr[5] = 0x0000000C;
+
+    GST_BUFFER_FLAG_SET (SeqParabuf, GST_BUFFER_FLAG_PREROLL);
+
+    gst_buffer_unref (omx_wmvdec->codec_data);
+    omx_wmvdec->codec_data = NULL;
+
+    result = omx_wmvdec->base_chain_func (pad, SeqParabuf);
+    if (result != GST_FLOW_OK) {
+      GST_ERROR_OBJECT (omx_wmvdec, "failed to push sequence header");
+      return result;
+    }
+  }
+
+  return omx_wmvdec->base_chain_func (pad, buf);
+}
+
 static void
 type_class_init (gpointer g_class, gpointer class_data)
 {
@@ -115,6 +170,10 @@ type_instance_init (GTypeInstance * instance, gpointer g_class)
   gst_pad_set_setcaps_function (omx_base_filter->sinkpad,
       gst_omx_wmvdec_sink_setcaps);
 
+  omx_wmvdec->base_chain_func = GST_PAD_CHAINFUNC (omx_base_filter->sinkpad);
+  gst_pad_set_chain_function (omx_base_filter->sinkpad,
+      gst_omx_wmvdec_pad_chain);
+
   omx_wmvdec->codec_data = NULL;
   omx_wmvdec->width = 0;
   omx_wmvdec->height = 0;
diff --git a/omx/gstomx_wmvdec.h b/omx/gstomx_wmvdec.h
index 7fe344a..e25886d 100644
--- a/omx/gstomx_wmvdec.h
+++ b/omx/gstomx_wmvdec.h
@@ -32,11 +32,14 @@ typedef struct GstOmxWmvDecClass GstOmxWmvDecClass;
 
 #include "gstomx_base_videodec.h"
 
+#define SEQ_PARAM_BUF_SIZE 24
+
 struct GstOmxWmvDec
 {
   GstOmxBaseVideoDec omx_base;
 
   GstPadSetCapsFunction base_setcapsfunc;
+  GstPadChainFunction base_chain_func;
   GstBuffer *codec_data;
   guint32 width, height;
 };
-- 
1.7.9.5

