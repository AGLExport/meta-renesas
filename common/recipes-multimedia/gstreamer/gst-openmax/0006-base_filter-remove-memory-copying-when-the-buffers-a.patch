From 05a76c8f5c07c795df0228f08b1915813a561d80 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Mon, 18 Jun 2012 15:26:45 +0900
Subject: [PATCH 06/39] base_filter: remove memory copying when the buffers
 are output from gst-openmax

Instead of using memcpy to copy the output buffer contents, send the
pre-allocated buffers to the sink plugin.

The pre-allocated buffers are registered with UIOMUX and their physical
address can be obtained by OMX_AllocateBuffer() for output port.
This allows libshvio to convert the frame data without memory copying.

The current implementation doesn't keep track of any reference counts on
the buffers handed out to the sink plugin.  As such, if the sink operates
asychronously with respect to the gst-openmax plugin, additional care will
need to be taken to ensure that the sink is finished with the buffer before
the gst-openmax plugin tries to use it again.
---
 omx/gstomx_base_filter.c |   13 ++++---------
 1 file changed, 4 insertions(+), 9 deletions(-)

diff --git a/omx/gstomx_base_filter.c b/omx/gstomx_base_filter.c
index fa16c7e..f894bf7 100644
--- a/omx/gstomx_base_filter.c
+++ b/omx/gstomx_base_filter.c
@@ -417,17 +417,12 @@ output_loop (gpointer data)
 
         gst_buffer_unref (buf);
       } else {
-        /* This is only meant for the first OpenMAX buffers,
-         * which need to be pre-allocated. */
-        /* Also for the very last one. */
-        ret = gst_pad_alloc_buffer_and_set_caps (self->srcpad,
-            GST_BUFFER_OFFSET_NONE,
-            omx_buffer->nFilledLen, GST_PAD_CAPS (self->srcpad), &buf);
+        buf = gst_buffer_new ();
+        gst_buffer_set_caps (buf, GST_PAD_CAPS (self->srcpad));
 
         if (G_LIKELY (buf)) {
-          memcpy (GST_BUFFER_DATA (buf),
-              omx_buffer->pBuffer + omx_buffer->nOffset,
-              omx_buffer->nFilledLen);
+          GST_BUFFER_DATA (buf) = omx_buffer->pBuffer + omx_buffer->nOffset;
+          GST_BUFFER_SIZE (buf) = omx_buffer->nFilledLen;
           if (self->use_timestamps) {
             GST_BUFFER_TIMESTAMP (buf) =
                 gst_util_uint64_scale_int (omx_buffer->nTimeStamp, GST_SECOND,
-- 
1.7.9.5

