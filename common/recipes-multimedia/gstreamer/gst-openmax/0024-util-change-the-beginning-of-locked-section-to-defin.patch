From da3a3ed5e611303cd227418348cfe71d2f6e88bf Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Wed, 21 Nov 2012 10:45:00 +0900
Subject: [PATCH 24/39] util: change the beginning of locked section to
 definitely wakeup blocking a thread when an error
 occurs

When OMX_EventError is caught after OMX_SendCommand() is called and before
g_cond_timed_wait() is invoked, the thread blocks until timeout because the
wakeup signal from the event handler is sent before the thread blocks.
This change moves the mutex lock to before OMX_SendCommand() in order to
avoid this race condition.
---
 omx/gstomx_util.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/omx/gstomx_util.c b/omx/gstomx_util.c
index 6a3098f..277249d 100644
--- a/omx/gstomx_util.c
+++ b/omx/gstomx_util.c
@@ -724,6 +724,8 @@ g_omx_port_finish (GOmxPort * port)
 static inline void
 change_state (GOmxCore * core, OMX_STATETYPE state)
 {
+  g_mutex_lock (core->omx_state_mutex);
+
   GST_DEBUG_OBJECT (core->object, "state=%d", state);
   OMX_SendCommand (core->omx_handle, OMX_CommandStateSet, state, NULL);
 }
@@ -746,8 +748,6 @@ wait_for_state (GOmxCore * core, OMX_STATETYPE state)
   GTimeVal tv;
   gboolean signaled;
 
-  g_mutex_lock (core->omx_state_mutex);
-
   g_get_current_time (&tv);
   g_time_val_add (&tv, 15 * G_USEC_PER_SEC);
 
-- 
1.7.9.5

