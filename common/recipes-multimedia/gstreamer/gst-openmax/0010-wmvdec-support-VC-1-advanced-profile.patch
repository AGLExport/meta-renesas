From 8ca002062fa99c56ec3783a3152d56ebc96ea455 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Thu, 12 Jul 2012 11:37:41 +0900
Subject: [PATCH 10/39] wmvdec: support VC-1 advanced profile

If VC-1 advanced profile stream is demuxed, codec_data has a sequence
header and a entry point header. At the beginning of playback,
this patch pushes a buffer which is the concatenation of sequence header,
entry point header and first frame data to decode the advanced profile
stream.
---
 omx/gstomx_wmvdec.c |   33 ++++++++++++++++++++++++++++++---
 omx/gstomx_wmvdec.h |    1 +
 2 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/omx/gstomx_wmvdec.c b/omx/gstomx_wmvdec.c
index 2a21439..fa75665 100644
--- a/omx/gstomx_wmvdec.c
+++ b/omx/gstomx_wmvdec.c
@@ -54,6 +54,7 @@ gst_omx_wmvdec_sink_setcaps (GstPad * pad, GstCaps * caps)
   GstStructure *structure;
   const GValue *value;
   GstCaps *sink_caps;
+  guint32 fourcc;
 
   omx_base = GST_OMX_BASE_FILTER (GST_PAD_PARENT (pad));
   omx_wmvdec = GST_OMX_WMVDEC (gst_pad_get_parent (pad));
@@ -88,6 +89,16 @@ gst_omx_wmvdec_sink_setcaps (GstPad * pad, GstCaps * caps)
   GST_INFO_OBJECT (omx_wmvdec,
       "picture size = %d x %d", omx_wmvdec->width, omx_wmvdec->height);
 
+  if (gst_structure_get_fourcc (structure, "format", &fourcc)) {
+    if (fourcc == GST_MAKE_FOURCC ('W', 'V', 'C', '1')) {
+      GST_INFO_OBJECT (omx_wmvdec, "stream type is Advanced Profile");
+      omx_wmvdec->is_ap = TRUE;
+    } else {
+      GST_INFO_OBJECT (omx_wmvdec, "stream type is Simple/Main Profile");
+      omx_wmvdec->is_ap = FALSE;
+    }
+  }
+
   GST_INFO_OBJECT (omx_wmvdec, "setcaps (sink): %" GST_PTR_FORMAT, sink_caps);
 
   return omx_wmvdec->base_setcapsfunc (pad, sink_caps);
@@ -106,14 +117,27 @@ gst_omx_wmvdec_pad_chain (GstPad * pad, GstBuffer * buf)
 
   GST_INFO_OBJECT (omx_wmvdec, "Enter");
 
-  /* split sequence parameter set and picture parameter set and other NALU */
-  /* parse AVCDecoderConfigurationRecord */
-  if (omx_wmvdec->codec_data != NULL) {
+  if (omx_wmvdec->codec_data == NULL)
+    goto no_codec_data;
+
+  if (omx_wmvdec->is_ap) {
+    GstCaps *caps;
+
+    caps = GST_BUFFER_CAPS (buf);
+
+    buf = gst_buffer_join (omx_wmvdec->codec_data, buf);
+    gst_buffer_set_caps (buf, caps);
+
+    omx_wmvdec->codec_data = NULL;
+  } else {
     GstBuffer *SeqParabuf = NULL;
     guint32 *u32ptr;
     guint8 *u8ptr;
     GstFlowReturn result;
 
+    /* split sequence parameter set and picture parameter set and other NALU */
+    /* and parse AVCDecoderConfigurationRecord */
+
     size = GST_BUFFER_SIZE (omx_wmvdec->codec_data);
     data = GST_BUFFER_DATA (omx_wmvdec->codec_data);
 
@@ -145,6 +169,8 @@ gst_omx_wmvdec_pad_chain (GstPad * pad, GstBuffer * buf)
     }
   }
 
+no_codec_data:
+
   return omx_wmvdec->base_chain_func (pad, buf);
 }
 
@@ -177,4 +203,5 @@ type_instance_init (GTypeInstance * instance, gpointer g_class)
   omx_wmvdec->codec_data = NULL;
   omx_wmvdec->width = 0;
   omx_wmvdec->height = 0;
+  omx_wmvdec->is_ap = FALSE;
 }
diff --git a/omx/gstomx_wmvdec.h b/omx/gstomx_wmvdec.h
index e25886d..84b79ad 100644
--- a/omx/gstomx_wmvdec.h
+++ b/omx/gstomx_wmvdec.h
@@ -42,6 +42,7 @@ struct GstOmxWmvDec
   GstPadChainFunction base_chain_func;
   GstBuffer *codec_data;
   guint32 width, height;
+  gboolean is_ap;
 };
 
 struct GstOmxWmvDecClass
-- 
1.7.9.5

