From 7799296b141bf5973138a36aa23b077778825831 Mon Sep 17 00:00:00 2001
From: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
Date: Tue, 14 May 2013 13:38:01 +0900
Subject: [PATCH 604/675] arm: mach-shmobile: bockw: add platform_device for
 PWM6

This patch also adds gpio setting for PWM6.
If we want to use PWM6, we have to turn the SW85-4 on.

Signed-off-by: Yoshihiro Shimoda <yoshihiro.shimoda.uh@renesas.com>
---
 arch/arm/mach-shmobile/board-bockw.c          |  4 ++++
 arch/arm/mach-shmobile/clock-r8a7778.c        |  2 +-
 arch/arm/mach-shmobile/include/mach/r8a7778.h |  1 +
 arch/arm/mach-shmobile/setup-r8a7778.c        | 18 ++++++++++++++++++
 drivers/pinctrl/sh-pfc/pfc-r8a7778.c          | 14 ++++++++++++++
 5 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mach-shmobile/board-bockw.c b/arch/arm/mach-shmobile/board-bockw.c
index 5ff4e00..3a199e6 100644
--- a/arch/arm/mach-shmobile/board-bockw.c
+++ b/arch/arm/mach-shmobile/board-bockw.c
@@ -446,6 +446,9 @@ static const struct pinctrl_map bockw_pinctrl_map[] = {
 				  "du0_sync", "du0"),
 	PIN_MAP_MUX_GROUP_DEFAULT("rcar-du", "pfc-r8a7778",
 				  "du0_disp", "du0"),
+	/* PWM6 */
+	PIN_MAP_MUX_GROUP_DEFAULT("rcar-pwm.6", "pfc-r8a7778",
+				  "pwm6", "pwm6"),
 };
 
 #define PFC	0xfffc0000
@@ -467,6 +470,7 @@ static void __init bockw_init(void)
 	r8a7778_add_vin_device(1, &vin_platform_data);
 	r8a7778_add_du_device(&rcar_du_plat);
 	r8a7778_add_gp2d_device();
+	r8a7778_add_pwm_device();
 	platform_device_register_data(&platform_bus, "soc-camera-pdrv", 0,
 				      &iclink0_ml86v7667,
 				      sizeof(iclink0_ml86v7667));
diff --git a/arch/arm/mach-shmobile/clock-r8a7778.c b/arch/arm/mach-shmobile/clock-r8a7778.c
index 5019eda..ee47801 100644
--- a/arch/arm/mach-shmobile/clock-r8a7778.c
+++ b/arch/arm/mach-shmobile/clock-r8a7778.c
@@ -168,7 +168,7 @@ static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP009] = SH_CLK_MSTP32(&p_clk, MSTPCR0,  9, 0), /* SSI3 */
 	[MSTP008] = SH_CLK_MSTP32(&p_clk, MSTPCR0,  8, 0), /* SRU */
 	[MSTP007] = SH_CLK_MSTP32(&p_clk, MSTPCR0,  7, 0), /* HSPI */
-	[MSTP005] = SH_CLK_MSTP32(&p_clk, MSTPCR0,  5, 0), /* PWM */
+	[MSTP005] = SH_CLK_MSTP32(&p_clk, MSTPCR0,  5, CLK_ENABLE_ON_INIT), /* PWM */
 };
 
 static struct clk_lookup lookups[] = {
diff --git a/arch/arm/mach-shmobile/include/mach/r8a7778.h b/arch/arm/mach-shmobile/include/mach/r8a7778.h
index 11b3010..65e90eb 100644
--- a/arch/arm/mach-shmobile/include/mach/r8a7778.h
+++ b/arch/arm/mach-shmobile/include/mach/r8a7778.h
@@ -41,6 +41,7 @@ extern void r8a7778_add_vin_device(int id,
 				   struct rcar_vin_platform_data *pdata);
 extern void r8a7778_add_du_device(struct rcar_du_platform_data *info);
 extern void r8a7778_add_gp2d_device(void);
+extern void r8a7778_add_pwm_device(void);
 
 extern void r8a7778_init_late(void);
 extern void r8a7778_init_delay(void);
diff --git a/arch/arm/mach-shmobile/setup-r8a7778.c b/arch/arm/mach-shmobile/setup-r8a7778.c
index 4f059b7..078e4e7 100644
--- a/arch/arm/mach-shmobile/setup-r8a7778.c
+++ b/arch/arm/mach-shmobile/setup-r8a7778.c
@@ -620,6 +620,24 @@ static struct platform_device *r8a7778_devices[] __initdata = {
 	&icb_cache_ctrl_device,
 };
 
+/* PWM */
+static struct resource pwm_resources[] __initdata = {
+	DEFINE_RES_MEM(0xffe56000, 0xff),
+};
+
+void __init r8a7778_add_pwm_device(void)
+{
+	struct platform_device_info pdevinfo = {
+		.parent		= &platform_bus,
+		.name		= "rcar-pwm",
+		.id		= 6,
+		.res		= pwm_resources,
+		.num_res	= ARRAY_SIZE(pwm_resources),
+	};
+
+	platform_device_register_full(&pdevinfo);
+}
+
 void __init r8a7778_add_standard_devices(void)
 {
 	int i;
diff --git a/drivers/pinctrl/sh-pfc/pfc-r8a7778.c b/drivers/pinctrl/sh-pfc/pfc-r8a7778.c
index 6c0ff2f..f7bd090 100644
--- a/drivers/pinctrl/sh-pfc/pfc-r8a7778.c
+++ b/drivers/pinctrl/sh-pfc/pfc-r8a7778.c
@@ -1772,6 +1772,7 @@ VIN_PFC_PINS(vin1_clk,		RCAR_GP_PIN(4, 9));
 VIN_PFC_CLK(vin1_clk,		VI1_CLK);
 VIN_PFC_PINS(vin1_sync,		RCAR_GP_PIN(3, 21),	RCAR_GP_PIN(3, 22));
 VIN_PFC_SYNC(vin1_sync,		VI1_HSYNC,		VI1_VSYNC);
+
 /* - DU macros ------------------------------------------------------------- */
 #define DU_PFC_PINS(name, args...)		SH_PFC_PINS(name, args)
 #define DU_PFC_DAT8(name, d0, d1, d2, d3, d4, d5, d6, d7)	\
@@ -1811,6 +1812,13 @@ DU_PFC_SYNC(du0_sync,		DU0_EXHSYNC_DU0_HSYNC,	DU0_EXVSYNC_DU0_VSYNC);
 DU_PFC_PINS(du0_disp,		RCAR_GP_PIN(2, 20));
 DU_PFC_DISP(du0_disp,		DU0_DISP);
 
+/* - PWM macros ------------------------------------------------------------ */
+#define PWM_PFC_PIN(name, outpin)		SH_PFC_PINS(name, outpin)
+#define PWM_PFC_MUX(name, outpin)		SH_PFC_MUX1(name, outpin)
+/* - PWM ------------------------------------------------------------------- */
+PWM_PFC_PIN(pwm6,		RCAR_GP_PIN(4, 20));
+PWM_PFC_MUX(pwm6,		PWM6);
+
 static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(audio_clk_a),
 	SH_PFC_PIN_GROUP(audio_clk_b),
@@ -1937,6 +1945,7 @@ static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(du0_clk),
 	SH_PFC_PIN_GROUP(du0_sync),
 	SH_PFC_PIN_GROUP(du0_disp),
+	SH_PFC_PIN_GROUP(pwm6),
 };
 
 static const char * const audio_clk_groups[] = {
@@ -2146,6 +2155,10 @@ static const char * const du0_groups[] = {
 	"du0_disp",
 };
 
+static const char * const pwm6_groups[] = {
+	"pwm6",
+};
+
 static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(audio_clk),
 	SH_PFC_FUNCTION(ether),
@@ -2174,6 +2187,7 @@ static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(vin0),
 	SH_PFC_FUNCTION(vin1),
 	SH_PFC_FUNCTION(du0),
+	SH_PFC_FUNCTION(pwm6),
 };
 
 static struct pinmux_cfg_reg pinmux_config_regs[] = {
-- 
1.8.2

