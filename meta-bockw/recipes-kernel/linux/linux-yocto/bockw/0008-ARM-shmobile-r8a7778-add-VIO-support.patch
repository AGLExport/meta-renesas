From 51f20fcd4e442d13f78e7d8366535d9d5bcc61dc Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Mon, 15 Apr 2013 15:50:43 +0900
Subject: [PATCH 08/17] ARM: shmobile: r8a7778: add VIO support

With this patch applied, the VIO device is added and the allocation
memory assigned to the VIO device is managed with CMA.
r8a7778_reserve_memory() will be invoked to reserve the contiguous
memory the VIO device uses at the time of startup.
---
 arch/arm/mach-shmobile/board-bockw.c         |    1 +
 arch/arm/mach-shmobile/clock-r8a7778.c       |    4 ++-
 arch/arm/mach-shmobile/include/mach/common.h |    1 +
 arch/arm/mach-shmobile/setup-r8a7778.c       |   43 ++++++++++++++++++++++++++
 4 files changed, 48 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mach-shmobile/board-bockw.c b/arch/arm/mach-shmobile/board-bockw.c
index 4f9c780..ec5261d 100644
--- a/arch/arm/mach-shmobile/board-bockw.c
+++ b/arch/arm/mach-shmobile/board-bockw.c
@@ -503,6 +503,7 @@ MACHINE_START(BOCKW, "bockw")
 	.nr_irqs	= NR_IRQS_LEGACY,
 	.init_irq	= r8a7778_init_irq,
 	.handle_irq	= gic_handle_irq,
+	.reserve        = r8a7778_reserve_memory,
 	.init_machine	= bockw_init,
 	.init_late	= shmobile_init_late,
 	.timer		= &shmobile_timer,
diff --git a/arch/arm/mach-shmobile/clock-r8a7778.c b/arch/arm/mach-shmobile/clock-r8a7778.c
index 250fc1d..3eee353 100644
--- a/arch/arm/mach-shmobile/clock-r8a7778.c
+++ b/arch/arm/mach-shmobile/clock-r8a7778.c
@@ -104,7 +104,7 @@ static struct clk div4_clks[DIV4_NR] = {
 				      0x0300, CLK_ENABLE_ON_INIT),
 };
 
-enum { MSTP513, MSTP410, MSTP408,
+enum { MSTP517, MSTP513, MSTP410, MSTP408,
 	MSTP323, MSTP107, MSTP103, MSTP100,
 	MSTP030,
 	MSTP029, MSTP028, MSTP027, MSTP026, MSTP025, MSTP024, MSTP023, MSTP022, MSTP021,
@@ -113,6 +113,7 @@ enum { MSTP513, MSTP410, MSTP408,
 	MSTP_NR };
 
 static struct clk mstp_clks[MSTP_NR] = {
+	[MSTP517] = SH_CLK_MSTP32(&div4_clks[DIV4_S3], MSTPCR5, 17, 0), /* VIO6C */
 	[MSTP513] = SH_CLK_MSTP32(&div4_clks[DIV4_S3], MSTPCR5, 13, 0), /* MERAM */
 	[MSTP410] = SH_CLK_MSTP32(&div4_clks[DIV4_S3], MSTPCR4, 10, 0), /* ICB */
 	[MSTP408] = SH_CLK_MSTP32(&div4_clks[DIV4_S3], MSTPCR4,  8, 0), /* VPC */
@@ -150,6 +151,7 @@ static struct clk_lookup lookups[] = {
 	CLKDEV_CON_ID("peripheral_clk",	&div4_clks[DIV4_P]),
 
 	/* MSTP32 clocks */
+	CLKDEV_DEV_ID("uio_dmem_genirq.0",	&mstp_clks[MSTP517]), /* VIO6C */
 	CLKDEV_DEV_ID("uio_pdrv_genirq.2",	&mstp_clks[MSTP513]), /* MERAM */
 	CLKDEV_CON_ID("icb",		&mstp_clks[MSTP410]), /* ICB */
 	CLKDEV_DEV_ID("uio_pdrv_genirq.1",	&mstp_clks[MSTP408]), /* VPC */
diff --git a/arch/arm/mach-shmobile/include/mach/common.h b/arch/arm/mach-shmobile/include/mach/common.h
index 3e1e28b..94de9f2 100644
--- a/arch/arm/mach-shmobile/include/mach/common.h
+++ b/arch/arm/mach-shmobile/include/mach/common.h
@@ -76,6 +76,7 @@ extern void r8a7778_init_irq(void);
 extern void r8a7778_add_early_devices(void);
 extern void r8a7778_add_standard_devices(void);
 extern void r8a7778_map_io(void);
+extern void r8a7778_reserve_memory(void);
 extern void r8a7778_pinmux_init(void);
 extern void r8a7778_meram_workaround(void);
 
diff --git a/arch/arm/mach-shmobile/setup-r8a7778.c b/arch/arm/mach-shmobile/setup-r8a7778.c
index dfec266..fd6e0dc 100644
--- a/arch/arm/mach-shmobile/setup-r8a7778.c
+++ b/arch/arm/mach-shmobile/setup-r8a7778.c
@@ -27,6 +27,7 @@
 #include <linux/interrupt.h>
 #include <linux/irq.h>
 #include <linux/platform_device.h>
+#include <linux/platform_data/uio_dmem_genirq.h>
 #include <linux/delay.h>
 #include <linux/input.h>
 #include <linux/io.h>
@@ -34,6 +35,7 @@
 #include <linux/sh_intc.h>
 #include <linux/sh_timer.h>
 #include <linux/uio_driver.h>
+#include <linux/dma-contiguous.h>
 #include <mach/hardware.h>
 #include <mach/irqs.h>
 #include <mach/r8a7778.h>
@@ -393,6 +395,41 @@ static struct platform_device meram_device = {
 	.num_resources  = ARRAY_SIZE(meram_resources),
 };
 
+/* VIO6C */
+static unsigned int vio_regions[] = {
+	(8 << 20),
+};
+
+static struct uio_dmem_genirq_pdata vio_platform_data = {
+	.uioinfo = {
+		.name = "VIO6C",
+		.version = "0",
+		.irq = gic_iid(0x9B),
+	},
+	.dynamic_region_sizes   = vio_regions,
+	.num_dynamic_regions    = ARRAY_SIZE(vio_regions),
+};
+
+static struct resource vio_resources[] = {
+	[0] = {
+		.name   = "VIO6C",
+		.start  = 0xfd020000,
+		.end    = 0xfd022a30,
+		.flags  = IORESOURCE_MEM,
+	},
+};
+
+static struct platform_device vio_device = {
+	.name           = "uio_dmem_genirq",
+	.id             = 0,
+	.dev = {
+		.platform_data  = &vio_platform_data,
+		.coherent_dma_mask = ~0,
+	},
+	.resource       = vio_resources,
+	.num_resources  = ARRAY_SIZE(vio_resources),
+};
+
 static struct platform_device *r8a7778_early_devices[] __initdata = {
 	&scif0_device,
 	&scif1_device,
@@ -409,6 +446,7 @@ static struct platform_device *r8a7778_early_devices[] __initdata = {
 	&ipmmu_device,
 	&vpc_device,
 	&meram_device,
+	&vio_device,
 };
 
 static struct platform_device *r8a7778_late_devices[] __initdata = {
@@ -433,6 +471,11 @@ static void __init r8a7778_earlytimer_init(void)
 	shmobile_earlytimer_init();
 }
 
+void __init r8a7778_reserve_memory(void)
+{
+	dma_declare_contiguous(&vio_device.dev, 8 << 20, 0, 0);
+}
+
 void __init r8a7778_add_early_devices(void)
 {
 	early_platform_add_devices(r8a7778_early_devices,
-- 
1.7.9.5

