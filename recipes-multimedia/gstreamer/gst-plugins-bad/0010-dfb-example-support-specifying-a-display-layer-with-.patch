From fff4e128060aa9d97c3ad6b64eaa233d660790c9 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Fri, 20 Apr 2012 14:33:37 +0900
Subject: [PATCH 10/97] dfb-example: support specifying a display layer with
 GetDisplayLayer()

---
 ext/directfb/dfb-example.c |   22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

diff --git a/ext/directfb/dfb-example.c b/ext/directfb/dfb-example.c
index 03fce39..3bd8ad2 100644
--- a/ext/directfb/dfb-example.c
+++ b/ext/directfb/dfb-example.c
@@ -28,15 +28,18 @@ usage (char *cmd)
   printf ("  -w		w of sub surface rectangle\n");
   printf ("  -h		h of sub surface rectangle\n");
   printf ("  -u		specify uyvy as v4l2src output pixelformat\n");
+  printf ("  -l		specify the number of display layer\n");
   printf ("  -o		DirectFB or GStreamer option\n");
 }
 
 int
 main (int argc, char *argv[])
 {
-  DFBSurfaceDescription dsc;
   GstElement *pipeline, *src, *sink;
   int screen_width, screen_height;
+  IDirectFBDisplayLayer *layer;
+  DFBDisplayLayerID layer_id;
+  DFBDisplayLayerConfig config;
   IDirectFBSurface *sub_surface;
   DFBRectangle rect;
   int opt;
@@ -57,9 +60,10 @@ main (int argc, char *argv[])
   tmp_argv[1] = strdup ("--dfb:quiet");
 
   memset (&rect, 0, sizeof (rect));
+  layer_id = 0;
 
   opterr = 0;
-  while ((opt = getopt (argc, argv, "x:y:w:h:uo:")) != -1) {
+  while ((opt = getopt (argc, argv, "x:y:w:h:ul:o:")) != -1) {
     switch (opt) {
       case 'x':
         rect.x = atoi (optarg);
@@ -76,6 +80,9 @@ main (int argc, char *argv[])
       case 'u':
         is_uyvy = TRUE;
         break;
+      case 'l':
+        layer_id = atoi (optarg);
+        break;
       case 'o':
         tmp_argv[tmp_argc++] = strdup (optarg);
         break;
@@ -92,13 +99,16 @@ main (int argc, char *argv[])
 
   /* Creates DirectFB main context and set it to fullscreen layout */
   DFBCHECK (DirectFBCreate (&dfb));
-  DFBCHECK (dfb->SetCooperativeLevel (dfb, DFSCL_FULLSCREEN));
+  DFBCHECK (dfb->GetDisplayLayer (dfb, layer_id, &layer));
+  DFBCHECK (layer->SetCooperativeLevel (layer, DLSCL_EXCLUSIVE));
 
   /* We want a double buffered primary surface */
-  dsc.flags = DSDESC_CAPS;
-  dsc.caps = DSCAPS_PRIMARY | DSCAPS_FLIPPING;
+  config.flags = DLCONF_BUFFERMODE | DLCONF_SURFACE_CAPS;
+  config.buffermode = DLBM_BACKVIDEO;
+  config.surface_caps = DSCAPS_FLIPPING;
 
-  DFBCHECK (dfb->CreateSurface (dfb, &dsc, &primary));
+  DFBCHECK (layer->SetConfiguration (layer, &config));
+  DFBCHECK (layer->GetSurface (layer, &primary));
   DFBCHECK (primary->GetSize (primary, &screen_width, &screen_height));
 
   /* default setting */
-- 
1.7.10.4

