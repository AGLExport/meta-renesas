From f47b3a4386493097196a41041275a438985ca2ac Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Wed, 19 Dec 2012 12:06:01 +0900
Subject: [PATCH 95/97] ext/dfbvideosink: add a new property to specify the
 layer cooperative level

This property can specify the layer cooperative level, which can be
selected by setting the string, "administrative" or "exclusive".
When the cursor is required, "administrative" should be set.
---
 ext/directfb/dfbvideosink.c |   40 +++++++++++++++++++++++++++++++++++++---
 ext/directfb/dfbvideosink.h |    6 ++++++
 2 files changed, 43 insertions(+), 3 deletions(-)

diff --git a/ext/directfb/dfbvideosink.c b/ext/directfb/dfbvideosink.c
index 9915ff6..e7589a4 100644
--- a/ext/directfb/dfbvideosink.c
+++ b/ext/directfb/dfbvideosink.c
@@ -132,7 +132,8 @@ enum
   ARG_BGCOLOR_RED,
   ARG_BGCOLOR_GREEN,
   ARG_BGCOLOR_BLUE,
-  ARG_BGCOLOR_ALPHA
+  ARG_BGCOLOR_ALPHA,
+  ARG_LAYER_MODE
 };
 
 static void gst_dfbvideosink_bufferpool_clear (GstDfbVideoSink * dfbvideosink);
@@ -786,8 +787,14 @@ gst_dfbvideosink_setup (GstDfbVideoSink * dfbvideosink)
         goto beach;
       }
 
-      ret = dfbvideosink->layer->SetCooperativeLevel (dfbvideosink->layer,
-          DLSCL_EXCLUSIVE);
+      if (dfbvideosink->layer_mode == LAYER_MODE_EXCLUSIVE ||
+          dfbvideosink->layer_mode == LAYER_MODE_ADMINISTRATIVE)
+        ret = dfbvideosink->layer->SetCooperativeLevel (dfbvideosink->layer,
+            dfbvideosink->layer_mode);
+      else {
+        GST_ERROR_OBJECT (dfbvideosink, "invalid layer cooperative level");
+        goto beach;
+      }
 
       if (ret != DFB_OK) {
         GST_WARNING_OBJECT (dfbvideosink, "failed setting display layer to "
@@ -3129,6 +3136,18 @@ gst_dfbvideosink_set_property (GObject * object, guint prop_id,
     case ARG_BGCOLOR_ALPHA:
       dfbvideosink->bgcolor.alpha = g_value_get_uint (value);
       break;
+    case ARG_LAYER_MODE:
+    {
+      const char *str = g_value_get_string (value);
+
+      if (strncmp (str, "administrative", strlen ("administrative")) == 0)
+        dfbvideosink->layer_mode = LAYER_MODE_ADMINISTRATIVE;
+      else if (strncmp (str, "exclusive", strlen ("exclusive")) == 0)
+        dfbvideosink->layer_mode = LAYER_MODE_EXCLUSIVE;
+      else
+        dfbvideosink->layer_mode = LAYER_MODE_INVALID;
+    }
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -3191,6 +3210,14 @@ gst_dfbvideosink_get_property (GObject * object, guint prop_id,
     case ARG_BGCOLOR_ALPHA:
       g_value_set_uint (value, dfbvideosink->bgcolor.alpha);
       break;
+    case ARG_LAYER_MODE:
+      if (dfbvideosink->layer_mode == LAYER_MODE_EXCLUSIVE)
+        g_value_set_string (value, "exclusive");
+      else if (dfbvideosink->layer_mode == LAYER_MODE_ADMINISTRATIVE)
+        g_value_set_string (value, "administrative");
+      else
+        g_value_set_string (value, "invalid");
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -3326,6 +3353,8 @@ gst_dfbvideosink_init (GstDfbVideoSink * dfbvideosink)
   dfbvideosink->bgcolor.blue = 0x00;
   dfbvideosink->bgcolor.alpha = 0xFF;
 
+  dfbvideosink->layer_mode = LAYER_MODE_EXCLUSIVE;
+
   gst_pad_set_query_function (pad,
       GST_DEBUG_FUNCPTR (gst_dfbvideosink_handle_sink_query));
 }
@@ -3422,6 +3451,11 @@ gst_dfbvideosink_class_init (GstDfbVideoSinkClass * klass)
       g_param_spec_uint ("bgcolor-alpha", "Background color alpha value",
           "The alpha value to fill the target surface", 0,
           G_MAXUINT8, 0xFF, G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+  g_object_class_install_property (gobject_class, ARG_LAYER_MODE,
+      g_param_spec_string ("layer-mode",
+          "The layer cooperative level (administrative or exclusive)",
+          "The cooperative level handling the access permission (When the cursor is required, you have to set to 'administrative')",
+          "exclusive", G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
   gstelement_class->change_state = gst_dfbvideosink_change_state;
 
diff --git a/ext/directfb/dfbvideosink.h b/ext/directfb/dfbvideosink.h
index 2d70c02..2284002 100644
--- a/ext/directfb/dfbvideosink.h
+++ b/ext/directfb/dfbvideosink.h
@@ -24,6 +24,10 @@
 
 #include <directfb.h>
 
+#define LAYER_MODE_INVALID          -1
+#define LAYER_MODE_EXCLUSIVE        DLSCL_EXCLUSIVE
+#define LAYER_MODE_ADMINISTRATIVE   DLSCL_ADMINISTRATIVE
+
 #if defined(HAVE_SHVIO)
 #include <uiomux/uiomux.h>
 #include <shvio/shvio.h>
@@ -162,6 +166,8 @@ struct _GstDfbVideoSink {
 
   /* color to fill a surface at the initialization */
   GstDfbBgColor bgcolor;
+
+  gint layer_mode;
 };
 
 struct _GstDfbVideoSinkClass {
-- 
1.7.10.4

