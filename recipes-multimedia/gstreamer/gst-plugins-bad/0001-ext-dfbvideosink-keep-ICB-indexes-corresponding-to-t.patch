From afa5bc27e03b6d463fda6a960dfb8f829afbcde8 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Mon, 22 Apr 2013 18:49:26 +0900
Subject: [PATCH 1/9] ext/dfbvideosink: keep ICB indexes corresponding to the
 each handle

Keep track of the index of each locked ICB.
This change is to prepare for implementing an ICB errata workaround.
ICB buffer indexes are required to set the active status in the
MEACTSTn register.
---
 ext/directfb/dfbvideosink.c | 262 +++++++++++++++++++++++---------------------
 ext/directfb/dfbvideosink.h |  14 ++-
 2 files changed, 152 insertions(+), 124 deletions(-)

diff --git a/ext/directfb/dfbvideosink.c b/ext/directfb/dfbvideosink.c
index 727c854..99f8e2d 100644
--- a/ext/directfb/dfbvideosink.c
+++ b/ext/directfb/dfbvideosink.c
@@ -631,7 +631,7 @@ pixel2byte (gint pixels, DFBSurfacePixelFormat dfbfmt)
 }
 
 static inline ICB *
-gst_dfbvideosink_lock_available_icb (MERAM * meram)
+gst_dfbvideosink_lock_available_icb (MERAM * meram, gint * index)
 {
   ICB *icb;
   gint i;
@@ -639,8 +639,11 @@ gst_dfbvideosink_lock_available_icb (MERAM * meram)
   /* NOTE: ICB #0 to #4 must be reserved for REL OMXIL. */
   for (i = 5; i <= MAX_ICB_INDEX; i++) {
     icb = meram_trylock_icb (meram, i);
-    if (icb)
+    if (icb) {
+      if (index)
+        *index = i;
       return icb;
+    }
   }
 
   return NULL;
@@ -977,60 +980,63 @@ gst_dfbvideosink_setup (GstDfbVideoSink * dfbvideosink)
     val |= 1 << 29;             /* use 0xc0000000-0xdfffffff */
     meram_write_reg (dfbvideosink->meram, regs, MEVCR1, val);
     meram_unlock_reg (dfbvideosink->meram, regs);
-    dfbvideosink->icby[SRC] = dfbvideosink->icbc[SRC] = NULL;
+    dfbvideosink->icby[SRC].handle = dfbvideosink->icbc[SRC].handle = NULL;
 
     /* initialize a writeback icb for Y plane */
-    dfbvideosink->icby[DST] =
-        gst_dfbvideosink_lock_available_icb (dfbvideosink->meram);
-    if (dfbvideosink->icby[DST] == NULL) {
+    dfbvideosink->icby[DST].handle =
+        gst_dfbvideosink_lock_available_icb (dfbvideosink->meram,
+        &dfbvideosink->icby[DST].index);
+    if (dfbvideosink->icby[DST].handle == NULL) {
       GST_ELEMENT_ERROR (dfbvideosink, RESOURCE, OPEN_WRITE, (NULL),
           ("Failed acquiring an ICB for the destination Y plane"));
       goto beach;
     }
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxMCNF,
-        0x00030000);
-    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxCTRL,
-        &val);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxMCNF, 0x00030000);
+    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxCTRL, &val);
     if (val & (7 << 4))
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxCTRL,
-          val | (7 << 4));
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxCTRL,
-        0x90400702);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+          MExxCTRL, val | (7 << 4));
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxCTRL, 0x90400702);
     /* NOTE: MExxSBSIZE is setting up afterward, that is in gst_dfbvideosink_setcaps(). */
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxSSARB,
-        0);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxSSARB, 0);
     addr =
-        meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icby[DST], 0);
+        meram_get_icb_address (dfbvideosink->meram,
+        dfbvideosink->icby[DST].handle, 0);
     uiomux_register ((void *) addr, addr, 4096 * height);
 
     /* initialize a writeback icb for CbCr plane */
     if (is_ycbcr (dfb2shvio_format (dfbvideosink->pixel_format))
         && dfbvideosink->pixel_format != DSPF_UYVY) {
-      dfbvideosink->icbc[DST] =
-          gst_dfbvideosink_lock_available_icb (dfbvideosink->meram);
-      if (dfbvideosink->icbc[DST] == NULL) {
+      dfbvideosink->icbc[DST].handle =
+          gst_dfbvideosink_lock_available_icb (dfbvideosink->meram,
+          &dfbvideosink->icbc[DST].index);
+      if (dfbvideosink->icbc[DST].handle == NULL) {
         GST_ELEMENT_ERROR (dfbvideosink, RESOURCE, OPEN_WRITE, (NULL),
             ("Failed acquiring an ICB for the destination CbCr plane"));
         goto beach;
       }
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxMCNF,
-          0x10030000);
-      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxCTRL,
-          &val);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxMCNF, 0x10030000);
+      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxCTRL, &val);
       if (val & (7 << 4))
-        meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxCTRL,
-            val | (7 << 4));
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxCTRL,
-          0x00500702);
+        meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+            MExxCTRL, val | (7 << 4));
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxCTRL, 0x00500702);
       /* NOTE: MExxSBSIZE is setting up afterward, that is in gst_dfbvideosink_setcaps(). */
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxSSARB,
-          0);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxSSARB, 0);
       addr =
-          meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icbc[DST],
-          0);
+          meram_get_icb_address (dfbvideosink->meram,
+          dfbvideosink->icbc[DST].handle, 0);
       uiomux_register ((void *) addr, addr, 4096 * height);
     } else {
-      dfbvideosink->icbc[DST] = NULL;
+      dfbvideosink->icbc[DST].handle = NULL;
     }
   }
 
@@ -1118,21 +1124,21 @@ gst_dfbvideosink_cleanup (GstDfbVideoSink * dfbvideosink)
       gulong addr;
 
       for (i = 0; i < 2; i++) {
-        if (dfbvideosink->icby[i]) {
+        if (dfbvideosink->icby[i].handle) {
           addr =
-              meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icby[i],
-              0);
+              meram_get_icb_address (dfbvideosink->meram,
+              dfbvideosink->icby[i].handle, 0);
           uiomux_unregister ((void *) addr);
-          meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[i]);
-          dfbvideosink->icby[i] = NULL;
+          meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[i].handle);
+          dfbvideosink->icby[i].handle = NULL;
         }
-        if (dfbvideosink->icbc[i]) {
+        if (dfbvideosink->icbc[i].handle) {
           addr =
-              meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icbc[i],
-              0);
+              meram_get_icb_address (dfbvideosink->meram,
+              dfbvideosink->icbc[i].handle, 0);
           uiomux_unregister ((void *) addr);
-          meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[i]);
-          dfbvideosink->icbc[i] = NULL;
+          meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[i].handle);
+          dfbvideosink->icbc[i].handle = NULL;
         }
       }
       meram_close (dfbvideosink->meram);
@@ -1667,29 +1673,34 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
 
   /* set up a readahead icb for Y plane
      4 lines / block-line, 8 lines held, 16 lines allocated */
-  if (dfbvideosink->icby[SRC]) {
+  if (dfbvideosink->icby[SRC].handle) {
     addr =
-        meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icby[SRC], 0);
+        meram_get_icb_address (dfbvideosink->meram,
+        dfbvideosink->icby[SRC].handle, 0);
     uiomux_unregister ((void *) addr);
-    meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[SRC]);
+    meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle);
   }
-  dfbvideosink->icby[SRC] =
-      gst_dfbvideosink_lock_available_icb (dfbvideosink->meram);
-  if (dfbvideosink->icby[SRC] == NULL) {
+  dfbvideosink->icby[SRC].handle =
+      gst_dfbvideosink_lock_available_icb (dfbvideosink->meram,
+      &dfbvideosink->icby[SRC].index);
+  if (dfbvideosink->icby[SRC].handle == NULL) {
     GST_ELEMENT_ERROR (dfbvideosink, RESOURCE, OPEN_WRITE, (NULL),
         ("Failed acquiring an ICB for the source Y plane"));
     return;
   }
-  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxMCNF,
-      0x010f0000);
-  meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxCTRL, &val);
+  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+      MExxMCNF, 0x010f0000);
+  meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle, MExxCTRL,
+      &val);
   if (val & (7 << 4))
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxCTRL,
-        val | 7 << 4);
-  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxCTRL,
-      0xa0000701);
-  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxSSARB, 0);
-  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxBSIZE,
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+        MExxCTRL, val | 7 << 4);
+  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+      MExxCTRL, 0xa0000701);
+  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+      MExxSSARB, 0);
+  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+      MExxBSIZE,
       (((sliceheight + dfbvideosink->tile_boundary_y_offset -
                   1) & 0x1fff) << 16) | ((stride - 1) & 0x7fff));
   sbsize = stride & 0xfff0;
@@ -1711,49 +1722,54 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
     case 0:
       break;
   }
-  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxSBSIZE,
-      sbsize);
+  meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+      MExxSBSIZE, sbsize);
   addr =
-      meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icby[SRC], 0);
+      meram_get_icb_address (dfbvideosink->meram,
+      dfbvideosink->icby[SRC].handle, 0);
   uiomux_register ((void *) addr, addr, 4096 * sliceheight);
 
   /* set up a readahead icb for CbCr plane
      4 lines / block-line, 8 lines held, 16 lines allocated */
-  if (dfbvideosink->icbc[SRC]) {
+  if (dfbvideosink->icbc[SRC].handle) {
     addr =
-        meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icbc[SRC], 0);
+        meram_get_icb_address (dfbvideosink->meram,
+        dfbvideosink->icbc[SRC].handle, 0);
     uiomux_unregister ((void *) addr);
-    meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC]);
+    meram_unlock_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle);
   }
   if (is_ycbcr (dfb2shvio_format (pixel_format)) && pixel_format != DSPF_UYVY) {
-    dfbvideosink->icbc[SRC] =
-        gst_dfbvideosink_lock_available_icb (dfbvideosink->meram);
-    if (dfbvideosink->icbc[SRC] == NULL) {
+    dfbvideosink->icbc[SRC].handle =
+        gst_dfbvideosink_lock_available_icb (dfbvideosink->meram,
+        &dfbvideosink->icbc[SRC].index);
+    if (dfbvideosink->icbc[SRC].handle == NULL) {
       GST_ELEMENT_ERROR (dfbvideosink, RESOURCE, OPEN_WRITE, (NULL),
           ("Failed acquiring an ICB for the source CbCr plane"));
       return;
     }
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxMCNF,
-        0x010f0000);
-    meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxCTRL,
-        &val);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxMCNF, 0x010f0000);
+    meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxCTRL, &val);
     if (val & (7 << 4))
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxCTRL,
-          val | 7 << 4);
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxCTRL,
-        0xa0200701);
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxBSIZE,
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+          MExxCTRL, val | 7 << 4);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxCTRL, 0xa0200701);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxBSIZE,
         (((sliceheight / 2 + dfbvideosink->tile_boundary_c_offset -
                     1) & 0x1fff) << 16) | ((stride - 1) & 0x7fff));
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxSBSIZE,
-        sbsize);
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxSSARB,
-        0);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxSBSIZE, sbsize);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+        MExxSSARB, 0);
     addr =
-        meram_get_icb_address (dfbvideosink->meram, dfbvideosink->icbc[SRC], 0);
+        meram_get_icb_address (dfbvideosink->meram,
+        dfbvideosink->icbc[SRC].handle, 0);
     uiomux_register ((void *) addr, addr, 4096 * sliceheight);
   } else {
-    dfbvideosink->icbc[SRC] = NULL;
+    dfbvideosink->icbc[SRC].handle = NULL;
   }
 
   /* set up MExxSBSIZE for the destination surface */
@@ -1764,12 +1780,12 @@ gst_dfbvideosink_setup_meram (GstDfbVideoSink * dfbvideosink, GstCaps * caps,
   surface->Unlock (surface);
   if (dfbvideosink->interlaced)
     stride *= 2;
-  if (dfbvideosink->icby[DST])
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxSBSIZE,
-        stride);
-  if (dfbvideosink->icbc[DST])
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxSBSIZE,
-        stride);
+  if (dfbvideosink->icby[DST].handle)
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxSBSIZE, stride);
+  if (dfbvideosink->icbc[DST].handle)
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+        MExxSBSIZE, stride);
 }
 #endif /* defined(HAVE_SHMERAM) */
 
@@ -2155,27 +2171,29 @@ gst_dfbvideosink_shvio_stretchblit (GstDfbVideoSink * dfbvideosink,
     viosurface[SRC].bpitchc = 4096;
     viosurface[SRC].bpitcha = 4096;
 
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxSSARA,
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+        MExxSSARA,
         phys[SRC] -
         dfbvideosink->rowstride * dfbvideosink->tile_boundary_y_offset);
     viosurface[SRC].py =
         (void *) (meram_get_icb_address (dfbvideosink->meram,
-            dfbvideosink->icby[SRC],
+            dfbvideosink->icby[SRC].handle,
             0) + py_frac +
         viosurface[SRC].bpitchy * dfbvideosink->tile_boundary_y_offset);
 
-    if (dfbvideosink->icbc[SRC]) {
+    if (dfbvideosink->icbc[SRC].handle) {
       gulong physc, pc_frac;
 
       physc = uiomux_all_virt_to_phys (src_addrc);
       pc_frac = physc & 0x0000000f;
 
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxSSARA,
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+          MExxSSARA,
           physc -
           dfbvideosink->rowstride * dfbvideosink->tile_boundary_c_offset);
       viosurface[SRC].pc =
           (void *) (meram_get_icb_address (dfbvideosink->meram,
-              dfbvideosink->icbc[SRC],
+              dfbvideosink->icbc[SRC].handle,
               0) + pc_frac +
           viosurface[SRC].bpitchc * dfbvideosink->tile_boundary_c_offset);
     } else {
@@ -2228,31 +2246,31 @@ gst_dfbvideosink_shvio_stretchblit (GstDfbVideoSink * dfbvideosink,
     viosurface[DST].bpitchc = 4096;
     viosurface[DST].bpitcha = 4096;
 
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxSSARA,
-        phys[DST]);
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxBSIZE,
-        (((dst->h - 1) & 0x1fff) << 16) | ((pixel2byte (dst->w,
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxSSARA, phys[DST]);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxBSIZE, (((dst->h - 1) & 0x1fff) << 16) | ((pixel2byte (dst->w,
                     dst_format) - 1) & 0x7fff));
 
     viosurface[DST].py =
         (void *) (meram_get_icb_address (dfbvideosink->meram,
-            dfbvideosink->icby[DST], 0) + py_frac);
+            dfbvideosink->icby[DST].handle, 0) + py_frac);
 
-    if (dfbvideosink->icbc[DST]) {
+    if (dfbvideosink->icbc[DST].handle) {
       gulong physc, pc_frac;
       gulong chroma_byte_offset = 0;
 
       physc = phys[DST] + chroma_byte_offset;
       pc_frac = physc & 0x0000000f;
 
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxBSIZE,
-          (((dst->h / 2 - 1) & 0x1fff) << 16) | ((pixel2byte (dst->w,
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxBSIZE, (((dst->h / 2 - 1) & 0x1fff) << 16) | ((pixel2byte (dst->w,
                       dst_format) - 1) & 0x7fff));
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxSSARA,
-          physc);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxSSARA, physc);
       viosurface[DST].pc =
           (void *) (meram_get_icb_address (dfbvideosink->meram,
-              dfbvideosink->icbc[DST], 0) + pc_frac);
+              dfbvideosink->icbc[DST].handle, 0) + pc_frac);
     } else {
       viosurface[DST].pc = 0;
     }
@@ -2289,32 +2307,32 @@ gst_dfbvideosink_shvio_stretchblit (GstDfbVideoSink * dfbvideosink,
 #if defined(HAVE_SHMERAM)
   if (phys[SRC]) {
     gulong val;
-    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxCTRL,
-        &val);
+    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+        MExxCTRL, &val);
     val |= 1 << 4;              /* RF: flush data */
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC], MExxCTRL,
-        val);
-    if (dfbvideosink->icbc[SRC]) {
-      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxCTRL,
-          &val);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[SRC].handle,
+        MExxCTRL, val);
+    if (dfbvideosink->icbc[SRC].handle) {
+      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+          MExxCTRL, &val);
       val |= 1 << 4;            /* RF: flush data */
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC], MExxCTRL,
-          val);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[SRC].handle,
+          MExxCTRL, val);
     }
   }
   if (phys[DST]) {
     gulong val;
-    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxCTRL,
-        &val);
+    meram_read_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxCTRL, &val);
     val |= 1 << 5;              /* WF: flush data */
-    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST], MExxCTRL,
-        val);
-    if (dfbvideosink->icbc[DST]) {
-      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxCTRL,
-          &val);
+    meram_write_icb (dfbvideosink->meram, dfbvideosink->icby[DST].handle,
+        MExxCTRL, val);
+    if (dfbvideosink->icbc[DST].handle) {
+      meram_read_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxCTRL, &val);
       val |= 1 << 5;            /* WF: flush data */
-      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST], MExxCTRL,
-          val);
+      meram_write_icb (dfbvideosink->meram, dfbvideosink->icbc[DST].handle,
+          MExxCTRL, val);
     }
   }
 #endif /* defined(HAVE_SHMERAM) */
diff --git a/ext/directfb/dfbvideosink.h b/ext/directfb/dfbvideosink.h
index b82d78b..e15be8d 100644
--- a/ext/directfb/dfbvideosink.h
+++ b/ext/directfb/dfbvideosink.h
@@ -89,6 +89,16 @@ struct _GstDfbBgColor
   guint8 alpha;
 };
 
+#if defined(HAVE_SHMERAM)
+typedef struct _GstDfbIcb GstDfbIcb;
+
+struct _GstDfbIcb
+{
+  ICB *handle;
+  gint index;
+};
+#endif /* defined(HAVE_SHMERAM) */
+
 /**
  * GstDfbVideoSink:
  *
@@ -160,8 +170,8 @@ struct _GstDfbVideoSink {
   gint next_field_offset;
 #if defined(HAVE_SHMERAM)
   MERAM *meram;
-  ICB *icby[2];
-  ICB *icbc[2];
+  GstDfbIcb icby[2];
+  GstDfbIcb icbc[2];
   gint tile_boundary_y_offset;
   gint tile_boundary_c_offset;
 
-- 
1.8.1.2

