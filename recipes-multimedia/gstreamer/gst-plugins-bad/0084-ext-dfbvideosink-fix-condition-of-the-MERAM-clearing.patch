From b5a10f61a23876e195e52de973ac57c0b512c4f4 Mon Sep 17 00:00:00 2001
From: Katsuya Matsubara <matsu@igel.co.jp>
Date: Tue, 18 Dec 2012 16:39:34 +0900
Subject: [PATCH 84/97] ext/dfbvideosink: fix condition of the MERAM clearing
 to treat auto-resizing with 'keep-aspect-ratio=true'

The process of MERAM clearing is only necessary if either the start
or end of a line that the VIO writes to is not a 16-byte aligned
address.
However, if the 'keep-aspect-ratio' property is true, the size and
position of the final output image may not match the value set by
the 'window-*' properties, causing garbage to be left uncleared in
the MERAM.
This activates the MERAM clearing regardless of the 'window-*'
properties if 'keep-aspect-ratio' is true.
---
 ext/directfb/dfbvideosink.c |   11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/ext/directfb/dfbvideosink.c b/ext/directfb/dfbvideosink.c
index 1b63a63..248a910 100644
--- a/ext/directfb/dfbvideosink.c
+++ b/ext/directfb/dfbvideosink.c
@@ -1735,6 +1735,9 @@ gst_dfbvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
       gst_dfbvideosink_get_format_name (pixel_format), dfbvideosink->fps_n,
       dfbvideosink->fps_d);
 
+  g_mutex_lock (dfbvideosink->window_lock);
+  if (dfbvideosink->keep_ar)
+    dfbvideosink->require_clear_meram = true;
 #if defined(HAVE_SHVIO)
   if (!gst_structure_get_int (structure, "rowstride", &dfbvideosink->rowstride))
     GST_LOG_OBJECT (dfbvideosink, "can't get rowstride from caps");
@@ -1915,12 +1918,14 @@ gst_dfbvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
   result = TRUE;
 
 beach:
+  g_mutex_unlock (dfbvideosink->window_lock);
   return result;
 
 /* ERRORS */
 wrong_aspect:
   {
     GST_INFO_OBJECT (dfbvideosink, "pixel aspect ratio does not match");
+    g_mutex_unlock (dfbvideosink->window_lock);
     return FALSE;
   }
 }
@@ -3018,7 +3023,8 @@ gst_dfbvideosink_set_property (GObject * object, guint prop_id,
       ivalue = g_value_get_int (value);
       g_mutex_lock (dfbvideosink->window_lock);
       dfbvideosink->require_clear_meram = ((ivalue & 0x03)
-          || ((dfbvideosink->window.x + ivalue) & 0x03));
+          || ((dfbvideosink->window.x + ivalue) & 0x03)
+          || dfbvideosink->keep_ar);
       dfbvideosink->window.w = ivalue;
       g_mutex_unlock (dfbvideosink->window_lock);
       break;
@@ -3031,7 +3037,8 @@ gst_dfbvideosink_set_property (GObject * object, guint prop_id,
       ivalue = g_value_get_int (value);
       g_mutex_lock (dfbvideosink->window_lock);
       dfbvideosink->require_clear_meram = ((ivalue & 0x03)
-          || ((dfbvideosink->window.w + ivalue) & 0x03));
+          || ((dfbvideosink->window.w + ivalue) & 0x03)
+          || dfbvideosink->keep_ar);
       dfbvideosink->window.x = ivalue;
       g_mutex_unlock (dfbvideosink->window_lock);
       break;
-- 
1.7.10.4

