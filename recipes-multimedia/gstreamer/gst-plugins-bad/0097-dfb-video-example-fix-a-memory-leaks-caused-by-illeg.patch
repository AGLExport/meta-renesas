From 6c0a11cb57d4425f6d721a6756c5af4d9dd269e5 Mon Sep 17 00:00:00 2001
From: Kazunori Kobayashi <kkobayas@igel.co.jp>
Date: Fri, 18 Jan 2013 11:26:35 +0900
Subject: [PATCH 97/97] dfb-video-example: fix a memory leaks caused by
 illegal usage of gst_pad_get_name()

A gchar pointer passed by gst_pad_get_name() should be free.
This patch adds appropriate g_free() to dfb-video-example and
video-ctrl-example to free the memory.
---
 ext/directfb/dfb-video-example.c |   10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/ext/directfb/dfb-video-example.c b/ext/directfb/dfb-video-example.c
index 424dc1f..a9b1d8b 100644
--- a/ext/directfb/dfb-video-example.c
+++ b/ext/directfb/dfb-video-example.c
@@ -196,15 +196,19 @@ create_audio_pipeline (GstPad * pad)
 static void
 on_pad_added (GstElement * element, GstPad * pad, gpointer data)
 {
+  gchar *name = gst_pad_get_name (pad);
+
   /* We can now link this pad with the gst-omx decoder or h264parse sink pad */
   printf ("Dynamic pad created, linking\n");
 
-  if (strcmp (gst_pad_get_name (pad), "video_00") == 0)
+  if (strcmp (name, "video_00") == 0)
     create_video_pipeline (pad, data);
-  else if (strcmp (gst_pad_get_name (pad), "audio_00") == 0)
+  else if (strcmp (name, "audio_00") == 0)
     create_audio_pipeline (pad);
   else
-    printf ("%s isn't acceptable.\n", gst_pad_get_name (pad));
+    printf ("%s isn't acceptable.\n", name);
+
+  g_free (name);
 }
 
 static void
-- 
1.7.10.4

