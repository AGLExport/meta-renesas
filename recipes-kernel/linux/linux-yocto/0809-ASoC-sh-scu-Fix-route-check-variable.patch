From 3a09f0fead5d6ba90ed61047760b7e638674e2ad Mon Sep 17 00:00:00 2001
From: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
Date: Fri, 26 Jul 2013 11:42:13 +0900
Subject: [PATCH 0809/1083] ASoC: sh: scu: Fix route check variable

The route check method is changed so that a more nearly static mixer
variable may be used.

Signed-off-by: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
---
 sound/soc/sh/scu_pcm.c | 198 ++++++++++++++++++++-----------------------------
 1 file changed, 82 insertions(+), 116 deletions(-)

diff --git a/sound/soc/sh/scu_pcm.c b/sound/soc/sh/scu_pcm.c
index 22597e9..9573de7 100644
--- a/sound/soc/sh/scu_pcm.c
+++ b/sound/soc/sh/scu_pcm.c
@@ -183,16 +183,13 @@ static int scu_dmae_request(struct snd_pcm_substream *ss)
 
 	FNC_ENTRY
 	if (!dir) { /* playback */
-		/* ssi0 */
-		if (pcminfo->routeinfo->pcb.init_ssi) {
-			/* dma channel allocation */
+		switch (pcminfo->routeinfo->p_route) {
+		case RP_MEM_SSI0:
+			/* dma(mem->ssi) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_MEM_SSI0,
 						SHDMA_DEVID_AUDIO, ss);
-		}
-
-		/* ssi0 via src0 */
-		if (pcminfo->routeinfo->pcb.init_ssi_src &&
-		    pcminfo->routeinfo->pcb.init_src) {
+			break;
+		case RP_MEM_SRC0_SSI0:
 			/* dma(mem->src) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_MEM_SRC0,
 						SHDMA_DEVID_AUDIO, ss);
@@ -200,12 +197,8 @@ static int scu_dmae_request(struct snd_pcm_substream *ss)
 			/* dma(src->ssi) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_SRC0_SSI0,
 						SHDMA_DEVID_AUDIOPP, ss);
-		}
-
-		/* ssi0 via src0,dvc0 */
-		if (pcminfo->routeinfo->pcb.init_ssi_dvc &&
-		    pcminfo->routeinfo->pcb.init_src &&
-		    pcminfo->routeinfo->pcb.init_dvc) {
+			break;
+		case RP_MEM_SRC0_DVC0_SSI0:
 			/* dma(mem->src) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_MEM_SRC0,
 						SHDMA_DEVID_AUDIO, ss);
@@ -213,18 +206,18 @@ static int scu_dmae_request(struct snd_pcm_substream *ss)
 			/* dma(cmd->ssi) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_CMD0_SSI0,
 						SHDMA_DEVID_AUDIOPP, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	} else { /* capture */
-		/* ssi1 */
-		if (pcminfo->routeinfo->ccb.init_ssi) {
-			/* dma channel allocation */
+		switch (pcminfo->routeinfo->c_route) {
+		case RC_SSI1_MEM:
+			/* dma(ssi->mem) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_SSI1_MEM,
 						SHDMA_DEVID_AUDIO, ss);
-		}
-
-		/* ssi1 via src1 */
-		if (pcminfo->routeinfo->ccb.init_ssi_src &&
-		    pcminfo->routeinfo->ccb.init_src) {
+			break;
+		case RC_SSI1_SRC1_MEM:
 			/* dma(src->mem) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_SRC1_MEM,
 						SHDMA_DEVID_AUDIO, ss);
@@ -232,12 +225,8 @@ static int scu_dmae_request(struct snd_pcm_substream *ss)
 			/* dma(ssi->src) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_SSI1_SRC1,
 						SHDMA_DEVID_AUDIOPP, ss);
-		}
-
-		/* ssi1 via src1,dvc1 */
-		if (pcminfo->routeinfo->ccb.init_ssi_dvc &&
-		    pcminfo->routeinfo->ccb.init_src_dvc &&
-		    pcminfo->routeinfo->ccb.init_dvc) {
+			break;
+		case RC_SSI1_SRC1_DVC1_MEM:
 			/* dma(cmd->mem) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_CMD1_MEM,
 						SHDMA_DEVID_AUDIO, ss);
@@ -245,7 +234,10 @@ static int scu_dmae_request(struct snd_pcm_substream *ss)
 			/* dma(ssi->src) channel allocation */
 			ret = scu_dmae_req_chan(SHDMA_SLAVE_PCM_SSI1_SRC1,
 						SHDMA_DEVID_AUDIOPP, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	}
 
 	FNC_EXIT
@@ -260,43 +252,37 @@ static int scu_dmae_release(struct snd_pcm_substream *ss)
 
 	FNC_ENTRY
 	if (!dir) { /* playback */
-		/* ssi */
-		if (pcminfo->routeinfo->pcb.init_ssi)
+		switch (pcminfo->routeinfo->p_route) {
+		case RP_MEM_SSI0:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_MEM_SSI0, ss);
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->pcb.init_ssi_src &&
-		    pcminfo->routeinfo->pcb.init_src) {
+			break;
+		case RP_MEM_SRC0_SSI0:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_SRC0_SSI0, ss);
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->pcb.init_ssi_dvc &&
-		    pcminfo->routeinfo->pcb.init_src &&
-		    pcminfo->routeinfo->pcb.init_dvc) {
+			break;
+		case RP_MEM_SRC0_DVC0_SSI0:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_CMD0_SSI0, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	} else { /* capture */
-		/* ssi */
-		if (pcminfo->routeinfo->ccb.init_ssi)
+		switch (pcminfo->routeinfo->c_route) {
+		case RC_SSI1_MEM:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_SSI1_MEM, ss);
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->ccb.init_ssi_src &&
-		    pcminfo->routeinfo->ccb.init_src) {
+			break;
+		case RC_SSI1_SRC1_MEM:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_SRC1_MEM, ss);
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_SSI1_SRC1, ss);
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->ccb.init_ssi_dvc &&
-		    pcminfo->routeinfo->ccb.init_src_dvc &&
-		    pcminfo->routeinfo->ccb.init_dvc) {
+			break;
+		case RC_SSI1_SRC1_DVC1_MEM:
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_CMD1_MEM, ss);
 			scu_dmae_rel_chan(SHDMA_SLAVE_PCM_SSI1_SRC1, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	}
 
 	FNC_EXIT
@@ -373,8 +359,8 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 
 	FNC_ENTRY
 	if (!dir) { /* playback */
-		/* ssi */
-		if (pcminfo->routeinfo->pcb.init_ssi) {
+		switch (pcminfo->routeinfo->p_route) {
+		case RP_MEM_SSI0:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_MEM_SSI0, ss);
 
@@ -385,11 +371,8 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				/* start ssi */
 				pcminfo->routeinfo->pcb.init_ssi(PCH, CCH);
 			}
-		}
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->pcb.init_ssi_src &&
-		    pcminfo->routeinfo->pcb.init_src) {
+			break;
+		case RP_MEM_SRC0_SSI0:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
 
@@ -404,12 +387,8 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				pcminfo->routeinfo->pcb.init_src(PCH,
 					ss->runtime->rate, SRC_CR_SYNC);
 			}
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->pcb.init_ssi_dvc &&
-		    pcminfo->routeinfo->pcb.init_src &&
-		    pcminfo->routeinfo->pcb.init_dvc) {
+			break;
+		case RP_MEM_SRC0_DVC0_SSI0:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
 
@@ -427,10 +406,13 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				pcminfo->routeinfo->pcb.init_src(PCH,
 					ss->runtime->rate, SRC_CR_SYNC);
 			}
-		}
+			break;
+		default:
+			break;
+		};
 	} else { /* capture */
-		/* ssi */
-		if (pcminfo->routeinfo->ccb.init_ssi) {
+		switch (pcminfo->routeinfo->c_route) {
+		case RC_SSI1_MEM:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_SSI1_MEM, ss);
 
@@ -441,11 +423,8 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				/* start ssi */
 				pcminfo->routeinfo->ccb.init_ssi(CCH, PCH);
 			}
-		}
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->ccb.init_ssi_src &&
-		    pcminfo->routeinfo->ccb.init_src) {
+			break;
+		case RC_SSI1_SRC1_MEM:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_SRC1_MEM, ss);
 
@@ -460,12 +439,8 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				pcminfo->routeinfo->ccb.init_src(CCH,
 					ss->runtime->rate, SRC_CR_SYNC);
 			}
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->ccb.init_ssi_dvc &&
-		    pcminfo->routeinfo->ccb.init_src_dvc &&
-		    pcminfo->routeinfo->ccb.init_dvc) {
+			break;
+		case RC_SSI1_SRC1_DVC1_MEM:
 			/* start dma */
 			scu_audma_start(SHDMA_SLAVE_PCM_CMD1_MEM, ss);
 
@@ -483,7 +458,10 @@ static void scu_pcm_start(struct snd_pcm_substream *ss, int first_flag)
 				pcminfo->routeinfo->ccb.init_src_dvc(CCH,
 					ss->runtime->rate, SRC_CR_ASYNC);
 			}
-		}
+			break;
+		default:
+			break;
+		};
 	}
 
 	FNC_EXIT
@@ -497,31 +475,22 @@ static void scu_pcm_stop(struct snd_pcm_substream *ss)
 
 	FNC_ENTRY
 	if (!dir) { /* playback */
-		/* ssi */
-		if (pcminfo->routeinfo->pcb.deinit_ssi) {
-			DBG_MSG("post:ssi\n");
+		switch (pcminfo->routeinfo->p_route) {
+		case RP_MEM_SSI0:
 			/* stop ssi */
 			pcminfo->routeinfo->pcb.deinit_ssi(PCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_MEM_SSI0, ss);
-		}
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->pcb.deinit_ssi_src &&
-		    pcminfo->routeinfo->pcb.deinit_src) {
-			DBG_MSG("post:src->ssi\n");
+			break;
+		case RP_MEM_SRC0_SSI0:
 			/* stop src */
 			pcminfo->routeinfo->pcb.deinit_src(PCH);
 			/* stop ssi */
 			pcminfo->routeinfo->pcb.deinit_ssi_src(PCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->pcb.deinit_ssi_dvc &&
-		    pcminfo->routeinfo->pcb.deinit_src &&
-		    pcminfo->routeinfo->pcb.deinit_dvc) {
+			break;
+		case RP_MEM_SRC0_DVC0_SSI0:
 			/* stop src */
 			pcminfo->routeinfo->pcb.deinit_src(PCH);
 			/* stop dvc */
@@ -530,33 +499,27 @@ static void scu_pcm_stop(struct snd_pcm_substream *ss)
 			pcminfo->routeinfo->pcb.deinit_ssi_dvc(PCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_MEM_SRC0, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	} else { /* capture */
-		/* ssi */
-		if (pcminfo->routeinfo->ccb.deinit_ssi) {
-			DBG_MSG("post:ssi\n");
+		switch (pcminfo->routeinfo->c_route) {
+		case RC_SSI1_MEM:
 			/* stop ssi */
 			pcminfo->routeinfo->ccb.deinit_ssi(CCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_SSI1_MEM, ss);
-		}
-
-		/* ssi via src */
-		if (pcminfo->routeinfo->ccb.deinit_ssi_src &&
-		    pcminfo->routeinfo->ccb.deinit_src) {
-			DBG_MSG("post:src->ssi\n");
+			break;
+		case RC_SSI1_SRC1_MEM:
 			/* stop src */
 			pcminfo->routeinfo->ccb.deinit_src(CCH);
 			/* stop ssi */
 			pcminfo->routeinfo->ccb.deinit_ssi_src(CCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_SRC1_MEM, ss);
-		}
-
-		/* ssi via src/dvc */
-		if (pcminfo->routeinfo->ccb.deinit_ssi_dvc &&
-		    pcminfo->routeinfo->ccb.deinit_src_dvc &&
-		    pcminfo->routeinfo->ccb.deinit_dvc) {
+			break;
+		case RC_SSI1_SRC1_DVC1_MEM:
 			/* stop src */
 			pcminfo->routeinfo->ccb.deinit_src_dvc(CCH);
 			/* stop dvc */
@@ -565,7 +528,10 @@ static void scu_pcm_stop(struct snd_pcm_substream *ss)
 			pcminfo->routeinfo->ccb.deinit_ssi_dvc(CCH);
 			/* stop dma */
 			scu_audma_stop(SHDMA_SLAVE_PCM_CMD1_MEM, ss);
-		}
+			break;
+		default:
+			break;
+		};
 	}
 
 	FNC_EXIT
-- 
1.8.3.2

