From 98be0891f05545330daf6e26107c70269e9e55e7 Mon Sep 17 00:00:00 2001
From: Hisashi Nakamura <hisashi.nakamura.ak@renesas.com>
Date: Tue, 11 Jun 2013 14:46:17 +0900
Subject: [PATCH 478/715] ARM: shmobile: r8a7790: Add SMP support

Signed-off-by: Hisashi Nakamura <hisashi.nakamura.ak@renesas.com>
(cherry picked from commit 5e9e5285c19f554740c5808f35d3ac828e1224a9)

Signed-off-by: Ryo Kataoka <ryo.kataoka.wt@renesas.com>
---
 arch/arm/boot/dts/r8a7790.dtsi               |   39 +++++++++-
 arch/arm/mach-shmobile/Makefile              |    3 +-
 arch/arm/mach-shmobile/board-lager.c         |   20 ++++-
 arch/arm/mach-shmobile/headsmp.S             |    7 ++
 arch/arm/mach-shmobile/include/mach/common.h |   13 ++++
 arch/arm/mach-shmobile/intc-r8a7790.c        |   48 ++++++++++++
 arch/arm/mach-shmobile/platsmp.c             |   52 +++++++++++++
 arch/arm/mach-shmobile/smp-r8a7790.c         |  103 ++++++++++++++++++++++++++
 drivers/irqchip/irq-gic.c                    |    2 +
 9 files changed, 284 insertions(+), 3 deletions(-)
 create mode 100644 arch/arm/mach-shmobile/intc-r8a7790.c
 create mode 100644 arch/arm/mach-shmobile/smp-r8a7790.c

diff --git a/arch/arm/boot/dts/r8a7790.dtsi b/arch/arm/boot/dts/r8a7790.dtsi
index 7a17110..e37aefb 100644
--- a/arch/arm/boot/dts/r8a7790.dtsi
+++ b/arch/arm/boot/dts/r8a7790.dtsi
@@ -1,6 +1,7 @@
 /*
  * Device Tree Source for the r8a7790 SoC
  *
+ * Copyright (C) 2013 Renesas Electronics Corporation
  * Copyright (C) 2013 Renesas Solutions Corp.
  *
  * This file is licensed under the terms of the GNU General Public License
@@ -24,6 +25,27 @@
 			reg = <0>;
 			clock-frequency = <1300000000>;
 		};
+
+		cpu1: cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <1>;
+			clock-frequency = <1300000000>;
+		};
+
+		cpu2: cpu@2 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <2>;
+			clock-frequency = <1300000000>;
+		};
+
+		cpu3: cpu@3 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a15";
+			reg = <3>;
+			clock-frequency = <1300000000>;
+		};
 	};
 
 	gic: interrupt-controller@f1001000 {
@@ -42,7 +64,22 @@
 			cpuif-id = <4>;
 			cpu = <&cpu0>;
 		};
-	};
+		gic-cpuif@5 {
+			compatible = "arm,gic-cpuif";
+			cpuif-id = <5>;
+			cpu = <&cpu1>;
+		};
+		gic-cpuif@6 {
+			compatible = "arm,gic-cpuif";
+			cpuif-id = <6>;
+			cpu = <&cpu2>;
+		};
+		gic-cpuif@7 {
+			compatible = "arm,gic-cpuif";
+			cpuif-id = <7>;
+			cpu = <&cpu3>;
+		};
+};
 
 	timer {
 		compatible = "arm,armv7-timer";
diff --git a/arch/arm/mach-shmobile/Makefile b/arch/arm/mach-shmobile/Makefile
index a4401cc..fa8509f 100644
--- a/arch/arm/mach-shmobile/Makefile
+++ b/arch/arm/mach-shmobile/Makefile
@@ -10,7 +10,7 @@ obj-$(CONFIG_ARCH_SH7372)	+= setup-sh7372.o clock-sh7372.o intc-sh7372.o
 obj-$(CONFIG_ARCH_SH73A0)	+= setup-sh73a0.o clock-sh73a0.o intc-sh73a0.o
 obj-$(CONFIG_ARCH_R8A7740)	+= setup-r8a7740.o clock-r8a7740.o intc-r8a7740.o
 obj-$(CONFIG_ARCH_R8A7779)	+= setup-r8a7779.o clock-r8a7779.o intc-r8a7779.o
-obj-$(CONFIG_ARCH_R8A7790)	+= setup-r8a7790.o clock-r8a7790.o
+obj-$(CONFIG_ARCH_R8A7790)	+= setup-r8a7790.o clock-r8a7790.o intc-r8a7790.o
 obj-$(CONFIG_ARCH_EMEV2)	+= setup-emev2.o clock-emev2.o
 
 # SMP objects
@@ -19,6 +19,7 @@ smp-$(CONFIG_HOTPLUG_CPU)	+= hotplug.o
 smp-$(CONFIG_ARCH_SH73A0)	+= smp-sh73a0.o
 smp-$(CONFIG_ARCH_R8A7779)	+= smp-r8a7779.o
 smp-$(CONFIG_ARCH_EMEV2)	+= smp-emev2.o
+smp-$(CONFIG_ARCH_R8A7790)	+= smp-r8a7790.o
 
 # IRQ objects
 obj-$(CONFIG_ARCH_SH7372)	+= entry-intc.o
diff --git a/arch/arm/mach-shmobile/board-lager.c b/arch/arm/mach-shmobile/board-lager.c
index c8a64b1..447ae46 100644
--- a/arch/arm/mach-shmobile/board-lager.c
+++ b/arch/arm/mach-shmobile/board-lager.c
@@ -1,6 +1,7 @@
 /*
  * Lager board support
  *
+ * Copyright (C) 2013 Renesas Electronics Corporation
  * Copyright (C) 2013  Renesas Solutions Corp.
  * Copyright (C) 2013  Magnus Damm
  *
@@ -25,8 +26,10 @@
 #include <linux/platform_device.h>
 #include <mach/common.h>
 #include <mach/r8a7790.h>
+#include <asm/page.h>
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
+#include <asm/mach/map.h>
 
 static const struct pinctrl_map lager_pinctrl_map[] = {
 	/* SCIF0 (CN19: DEBUG SERIAL0) */
@@ -37,6 +40,20 @@ static const struct pinctrl_map lager_pinctrl_map[] = {
 				  "scif1_data", "scif1"),
 };
 
+static struct map_desc lager_io_desc[] __initdata = {
+	{
+		.virtual	= 0xe6000000,
+		.pfn		= __phys_to_pfn(0xe6000000),
+		.length		= SZ_16M,
+		.type		= MT_DEVICE_NONSHARED,
+	},
+};
+
+static void __init lager_map_io(void)
+{
+	iotable_init(lager_io_desc, ARRAY_SIZE(lager_io_desc));
+}
+
 static void __init lager_add_standard_devices(void)
 {
 	r8a7790_clock_init();
@@ -54,7 +71,8 @@ static const char *lager_boards_compat_dt[] __initdata = {
 };
 
 DT_MACHINE_START(LAGER_DT, "lager")
-	.init_irq	= irqchip_init,
+	.init_irq	= r8a7790_init_irq,
+	.map_io		= lager_map_io,
 	.timer		= &r8a7790_timer,
 	.init_machine	= lager_add_standard_devices,
 	.dt_compat	= lager_boards_compat_dt,
diff --git a/arch/arm/mach-shmobile/headsmp.S b/arch/arm/mach-shmobile/headsmp.S
index b202c12..9a3ac22 100644
--- a/arch/arm/mach-shmobile/headsmp.S
+++ b/arch/arm/mach-shmobile/headsmp.S
@@ -1,6 +1,7 @@
 /*
  * SMP support for R-Mobile / SH-Mobile
  *
+ * Copyright (C) 2013  Renesas Electronics Corporation
  * Copyright (C) 2010  Magnus Damm
  * Copyright (C) 2010  Takashi Yoshii
  *
@@ -79,3 +80,9 @@ ENTRY(shmobile_secondary_vector)
 	ldr     pc, 1f
 1:	.long   shmobile_invalidate_start - PAGE_OFFSET + PLAT_PHYS_OFFSET
 ENDPROC(shmobile_secondary_vector)
+
+	.align
+ENTRY(r8a7790_secondary_cpu_entry)
+	ldr     pc, 1f
+1:	.long   secondary_startup - PAGE_OFFSET + PLAT_PHYS_OFFSET
+ENDPROC(r8a7790_secondary_cpu_entry)
diff --git a/arch/arm/mach-shmobile/include/mach/common.h b/arch/arm/mach-shmobile/include/mach/common.h
index 866e9f4..d52b7ce 100644
--- a/arch/arm/mach-shmobile/include/mach/common.h
+++ b/arch/arm/mach-shmobile/include/mach/common.h
@@ -61,6 +61,19 @@ extern void r8a7740_meram_workaround(void);
 
 extern void r8a7779_register_twd(void);
 
+extern void r8a7790_init_irq(void);
+extern void r8a7790_map_io(void);
+extern void r8a7790_add_early_devices(void);
+extern void r8a7790_add_standard_devices(void);
+extern void r8a7790_clock_init(void);
+extern void r8a7790_pinmux_init(void);
+
+extern unsigned int r8a7790_get_core_count(void);
+extern void r8a7790_secondary_init(unsigned int cpu);
+extern int r8a7790_boot_secondary(unsigned int cpu);
+extern void r8a7790_smp_prepare_cpus(unsigned int max_cpus);
+extern void r8a7790_secondary_cpu_entry(void);
+
 extern void shmobile_init_late(void);
 
 #ifdef CONFIG_SUSPEND
diff --git a/arch/arm/mach-shmobile/intc-r8a7790.c b/arch/arm/mach-shmobile/intc-r8a7790.c
new file mode 100644
index 0000000..7a99e1b
--- /dev/null
+++ b/arch/arm/mach-shmobile/intc-r8a7790.c
@@ -0,0 +1,48 @@
+/*
+ * arch/arm/mach-shmobile/intc-r8a7790.c
+ *     r8a7790 processor support - INTC hardware block
+ *
+ * Copyright (C) 2013 Renesas Electronics Corporation
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/irq.h>
+#include <linux/of_irq.h>
+#include <linux/of_address.h>
+#include <asm/io.h>
+#include <asm/mach/irq.h>
+#include <mach/irqs.h>
+#include <mach/r8a7790.h>
+
+extern struct irq_chip gic_arch_extn;
+int gic_of_init(struct device_node *node, struct device_node *parent);
+
+static int r8a7790_set_wake(struct irq_data *data, unsigned int on)
+{
+	return 0;
+}
+
+static  struct of_device_id r8a7790_irq_match[] __initdata = {
+	{ .compatible = "arm,cortex-a15-gic", .data = gic_of_init, },
+	{}
+};
+
+void __init r8a7790_init_irq(void)
+{
+	of_irq_init(r8a7790_irq_match);
+	gic_arch_extn.irq_set_wake = r8a7790_set_wake;
+}
diff --git a/arch/arm/mach-shmobile/platsmp.c b/arch/arm/mach-shmobile/platsmp.c
index 5833c60..dc0b5e4 100644
--- a/arch/arm/mach-shmobile/platsmp.c
+++ b/arch/arm/mach-shmobile/platsmp.c
@@ -1,6 +1,7 @@
 /*
  * SMP support for R-Mobile / SH-Mobile
  *
+ * Copyright (C) 2013  Renesas Electronics Corporation
  * Copyright (C) 2010  Magnus Damm
  * Copyright (C) 2011  Paul Mundt
  *
@@ -18,6 +19,36 @@
 #include <mach/common.h>
 #include <mach/emev2.h>
 
+#ifdef CONFIG_ARCH_R8A7790
+#define is_r8a7790() of_machine_is_compatible("renesas,r8a7790")
+#else
+#define is_r8a7790() (0)
+#endif
+
+static unsigned int __init shmobile_smp_get_core_count(void)
+{
+	if (is_r8a7790())
+		return r8a7790_get_core_count();
+
+	return 1;
+}
+
+void __cpuinit platform_secondary_init(unsigned int cpu)
+{
+	trace_hardirqs_off();
+
+	if (is_r8a7790())
+		r8a7790_secondary_init(cpu);
+}
+
+int __cpuinit boot_secondary(unsigned int cpu, struct task_struct *idle)
+{
+	if (is_r8a7790())
+		return r8a7790_boot_secondary(cpu);
+
+	return -ENOSYS;
+}
+
 void __init shmobile_smp_init_cpus(unsigned int ncores)
 {
 	unsigned int i;
@@ -31,3 +62,24 @@ void __init shmobile_smp_init_cpus(unsigned int ncores)
 	for (i = 0; i < ncores; i++)
 		set_cpu_possible(i, true);
 }
+
+void __init smp_init_cpus(void)
+{
+	unsigned int ncores = shmobile_smp_get_core_count();
+	unsigned int i;
+
+	if (ncores > nr_cpu_ids) {
+		pr_warn("SMP: %u cores greater than maximum (%u), clipping\n",
+			ncores, nr_cpu_ids);
+		ncores = nr_cpu_ids;
+	}
+
+	for (i = 0; i < ncores; i++)
+		set_cpu_possible(i, true);
+}
+
+void __init platform_smp_prepare_cpus(unsigned int max_cpus)
+{
+	if (is_r8a7790())
+		r8a7790_smp_prepare_cpus(max_cpus);
+}
diff --git a/arch/arm/mach-shmobile/smp-r8a7790.c b/arch/arm/mach-shmobile/smp-r8a7790.c
new file mode 100644
index 0000000..da96e5a
--- /dev/null
+++ b/arch/arm/mach-shmobile/smp-r8a7790.c
@@ -0,0 +1,103 @@
+/*
+ * arch/arm/mach-shmobile/smp-r8a7790.c
+ *     SMP support for R-Mobile / SH-Mobile - r8a7790 portion
+ *
+ * Copyright (C) 2013 Renesas Electronics Corporation
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/delay.h>
+#include <linux/jiffies.h>
+#include <linux/smp.h>
+#include <asm/cacheflush.h>
+#include <asm/io.h>
+#include <asm/smp_plat.h>
+#include <mach/common.h>
+#include <mach/hardware.h>
+
+void gic_secondary_init(unsigned int);
+
+unsigned int r8a7790_get_core_count(void)
+{
+	return CONFIG_NR_CPUS;
+}
+
+#define CA15BAR	0xe6166020
+#define CA15RESCNT	0xe6160040
+#define RESCNT	0xe6160050
+#define CA15WUPCR	0xe6154010
+#define SYSCSR	0xe6180000
+#define MERAM	0xe8080000
+#define CCI_BASE	0xf0190000
+#define CCI_SLAVE3	0x4000
+#define CCI_SLAVE4	0x5000
+#define CCI_SNOOP	0x0000
+#define CCI_STATUS	0x000c
+
+void __init r8a7790_smp_prepare_cpus(unsigned int max_cpus)
+{
+	int i;
+	u32 bar;
+	void __iomem *p;
+
+	for (i = 0; i < max_cpus; i++)
+		set_cpu_present(i, true);
+
+	/* MERAM for jump stub, because BAR requires 256KB aligned address */
+	p = ioremap_nocache(MERAM, 16);
+	memcpy(p, r8a7790_secondary_cpu_entry, 16);
+	iounmap(p);
+
+	bar = (MERAM >> 8) & 0xfffffc00;
+	__raw_writel(bar, CA15BAR);
+	__raw_writel(bar | 0x10, CA15BAR);
+}
+
+void __cpuinit r8a7790_secondary_init(unsigned int cpu)
+{
+	gic_secondary_init(0);
+}
+
+int __cpuinit r8a7790_boot_secondary(unsigned int cpu)
+{
+	u32 val;
+
+	cpu = cpu_logical_map(cpu);
+
+	__raw_writel(1 << (cpu & 3), CA15WUPCR);
+
+	while ((__raw_readl(SYSCSR) & 0x3) != 0x3)
+		;
+	while (__raw_readl(CA15WUPCR) != 0x0)
+		;
+
+	val = __raw_readl(CA15RESCNT);
+	val |= 0xa5a50000;
+	switch (cpu & 3) {
+	case 1:
+		__raw_writel(val & ~0x4, CA15RESCNT);
+		break;
+	case 2:
+		__raw_writel(val & ~0x2, CA15RESCNT);
+		break;
+	case 3:
+		__raw_writel(val & ~0x1, CA15RESCNT);
+		break;
+	}
+
+	return 0;
+}
diff --git a/drivers/irqchip/irq-gic.c b/drivers/irqchip/irq-gic.c
index a32e0d5..3507a60 100644
--- a/drivers/irqchip/irq-gic.c
+++ b/drivers/irqchip/irq-gic.c
@@ -424,6 +424,8 @@ static void __cpuinit gic_cpu_init(struct gic_chip_data *gic)
 	 */
 	BUG_ON(cpu >= NR_GIC_CPU_IF);
 	cpu_mask = gic_get_cpumask(gic);
+	cpu_mask |= cpu_mask << 8;
+	cpu_mask |= cpu_mask << 16;
 	gic_cpu_map[cpu] = cpu_mask;
 
 	/*
-- 
1.7.10.4

