From 0949a26e84adb470dc7ed4767010a8d8a4ed2daf Mon Sep 17 00:00:00 2001
From: Paul Mundt <lethal@linux-sh.org>
Date: Tue, 10 Jul 2012 11:59:29 +0900
Subject: [PATCH 278/715] sh: pfc: Dumb GPIO stringification.

This implements fairly simplistic stringification of existing pinmux
GPIOs for easy enum id -> string mapping, which will subsequently be used
by the pinctrl support code.

Signed-off-by: Paul Mundt <lethal@linux-sh.org>
(cherry picked from commit 72c7afa10f272710028f244da65d35e571144085)

Signed-off-by: Simon Horman <horms+renesas@verge.net.au>
---
 include/linux/sh_pfc.h |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/include/linux/sh_pfc.h b/include/linux/sh_pfc.h
index f522550..8c4cbcb 100644
--- a/include/linux/sh_pfc.h
+++ b/include/linux/sh_pfc.h
@@ -11,6 +11,7 @@
 #ifndef __SH_PFC_H
 #define __SH_PFC_H
 
+#include <linux/stringify.h>
 #include <asm-generic/gpio.h>
 
 typedef unsigned short pinmux_enum_t;
@@ -37,10 +38,11 @@ enum {
 struct pinmux_gpio {
 	pinmux_enum_t enum_id;
 	pinmux_flag_t flags;
+	const char *name;
 };
 
 #define PINMUX_GPIO(gpio, data_or_mark) \
-	[gpio] = { .enum_id = data_or_mark, .flags = PINMUX_TYPE_NONE }
+	[gpio] = { .name = __stringify(gpio), .enum_id = data_or_mark, .flags = PINMUX_TYPE_NONE }
 
 #define PINMUX_DATA(data_or_mark, ids...) data_or_mark, ids, 0
 
-- 
1.7.10.4

