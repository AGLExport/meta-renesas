From fe91e0a777b1a6c6c0e3a2320e7cc78cd8309fad Mon Sep 17 00:00:00 2001
From: Hans Verkuil <hans.verkuil@cisco.com>
Date: Mon, 14 May 2012 11:32:48 -0300
Subject: [PATCH 0867/1083] [media] v4l2-dev: rename two functions

Rename the function v4l2_dont_use_lock to v4l2_disable_ioctl_locking,
and rename v4l2_dont_use_cmd to v4l2_disable_ioctl.

Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
(cherry picked from commit 152a3a7320d1582009db85d8be365ce430d079af)

Signed-off-by: Simon Horman <horms+renesas@verge.net.au>

Conflicts:
	Documentation/video4linux/v4l2-framework.txt
	drivers/media/video/gspca/gspca.c
	drivers/media/video/pwc/pwc-if.c
	sound/i2c/other/tea575x-tuner.c
(cherry picked from commit 5c7d633a5e70dd436e91d62c84071f5168e4599b)

Signed-off-by: Ryo Kataoka <ryo.kataoka.wt@renesas.com>
---
 Documentation/video4linux/v4l2-framework.txt |  4 ++--
 drivers/media/video/v4l2-dev.c               |  2 +-
 include/media/v4l2-dev.h                     | 10 +++++-----
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/Documentation/video4linux/v4l2-framework.txt b/Documentation/video4linux/v4l2-framework.txt
index 320dabb..1adc3de 100644
--- a/Documentation/video4linux/v4l2-framework.txt
+++ b/Documentation/video4linux/v4l2-framework.txt
@@ -620,9 +620,9 @@ will be either a top-level mutex or a mutex per device node. By default this
 lock will be used for each file operation and ioctl, but you can disable
 locking for selected ioctls by calling:
 
-	void v4l2_dont_use_lock(struct video_device *vdev, unsigned int cmd);
+	void v4l2_disable_ioctl_locking(struct video_device *vdev, unsigned int cmd);
 
-E.g.: v4l2_dont_use_lock(vdev, VIDIOC_DQBUF);
+E.g.: v4l2_disable_ioctl_locking(vdev, VIDIOC_DQBUF);
 
 You have to call this before you register the video_device.
 
diff --git a/drivers/media/video/v4l2-dev.c b/drivers/media/video/v4l2-dev.c
index cdb74a9..39315ac 100644
--- a/drivers/media/video/v4l2-dev.c
+++ b/drivers/media/video/v4l2-dev.c
@@ -351,7 +351,7 @@ static long v4l2_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 		if (vdev->lock) {
 			/* always lock unless the cmd is marked as "don't use lock" */
 			locked = !v4l2_is_known_ioctl(cmd) ||
-				 !test_bit(_IOC_NR(cmd), vdev->dont_use_lock);
+				 !test_bit(_IOC_NR(cmd), vdev->disable_locking);
 
 			if (locked && mutex_lock_interruptible(vdev->lock))
 				return -ERESTARTSYS;
diff --git a/include/media/v4l2-dev.h b/include/media/v4l2-dev.h
index a5ecec6..08aca24 100644
--- a/include/media/v4l2-dev.h
+++ b/include/media/v4l2-dev.h
@@ -129,7 +129,7 @@ struct video_device
 	DECLARE_BITMAP(valid_ioctls, BASE_VIDIOC_PRIVATE);
 
 	/* serialization lock */
-	DECLARE_BITMAP(dont_use_lock, BASE_VIDIOC_PRIVATE);
+	DECLARE_BITMAP(disable_locking, BASE_VIDIOC_PRIVATE);
 	struct mutex *lock;
 };
 
@@ -179,17 +179,17 @@ void video_device_release_empty(struct video_device *vdev);
 bool v4l2_is_known_ioctl(unsigned int cmd);
 
 /* mark that this command shouldn't use core locking */
-static inline void v4l2_dont_use_lock(struct video_device *vdev, unsigned int cmd)
+static inline void v4l2_disable_ioctl_locking(struct video_device *vdev, unsigned int cmd)
 {
 	if (_IOC_NR(cmd) < BASE_VIDIOC_PRIVATE)
-		set_bit(_IOC_NR(cmd), vdev->dont_use_lock);
+		set_bit(_IOC_NR(cmd), vdev->disable_locking);
 }
 
-/* Mark that this command isn't implemented, must be called before
+/* Mark that this command isn't implemented. This must be called before
    video_device_register. See also the comments in determine_valid_ioctls().
    This function allows drivers to provide just one v4l2_ioctl_ops struct, but
    disable ioctls based on the specific card that is actually found. */
-static inline void v4l2_dont_use_cmd(struct video_device *vdev, unsigned int cmd)
+static inline void v4l2_disable_ioctl(struct video_device *vdev, unsigned int cmd)
 {
 	if (_IOC_NR(cmd) < BASE_VIDIOC_PRIVATE)
 		set_bit(_IOC_NR(cmd), vdev->valid_ioctls);
-- 
1.8.3.2

