From e514231564f807204c5ef144be93fd15d89c67a6 Mon Sep 17 00:00:00 2001
From: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
Date: Fri, 26 Jul 2013 10:19:50 +0900
Subject: [PATCH 0750/1083] ARM: shmobile: r8a7791: Add I2C driver support

Signed-off-by: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
---
 arch/arm/mach-shmobile/clock-r8a7791.c |  14 ++-
 arch/arm/mach-shmobile/setup-r8a7791.c | 159 +++++++++++++++++++++++++++++++++
 2 files changed, 172 insertions(+), 1 deletion(-)

diff --git a/arch/arm/mach-shmobile/clock-r8a7791.c b/arch/arm/mach-shmobile/clock-r8a7791.c
index 97e1c83..a142cf3 100644
--- a/arch/arm/mach-shmobile/clock-r8a7791.c
+++ b/arch/arm/mach-shmobile/clock-r8a7791.c
@@ -118,13 +118,19 @@ static struct clk *main_clks[] = {
 /* MSTP */
 enum {
 	MSTP721, MSTP720,
-/*	MSTP216, MSTP207, MSTP206, MSTP204, MSTP203, MSTP202,*/
+	MSTP931, MSTP930, MSTP929, MSTP928, MSTP927, MSTP925,
 	MSTP_NR
 };
 
 static struct clk mstp_clks[MSTP_NR] = {
 	[MSTP721] = SH_CLK_MSTP32(&p_clk, SMSTPCR7, 21, 0), /* SCIF0 */
 	[MSTP720] = SH_CLK_MSTP32(&p_clk, SMSTPCR7, 20, 0), /* SCIF1 */
+	[MSTP931] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 31, 0),
+	[MSTP930] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 30, 0),
+	[MSTP929] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 29, 0),
+	[MSTP928] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 28, 0),
+	[MSTP927] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 27, 0),
+	[MSTP925] = SH_CLK_MSTP32(&hp_clk, SMSTPCR9, 25, 0),
 };
 
 static struct clk_lookup lookups[] = {
@@ -145,6 +151,12 @@ static struct clk_lookup lookups[] = {
 	/* MSTP */
 	CLKDEV_DEV_ID("sh-sci.6", &mstp_clks[MSTP721]),
 	CLKDEV_DEV_ID("sh-sci.7", &mstp_clks[MSTP720]),
+	CLKDEV_DEV_ID("i2c-rcar.0", &mstp_clks[MSTP931]),
+	CLKDEV_DEV_ID("i2c-rcar.1", &mstp_clks[MSTP930]),
+	CLKDEV_DEV_ID("i2c-rcar.2", &mstp_clks[MSTP929]),
+	CLKDEV_DEV_ID("i2c-rcar.3", &mstp_clks[MSTP928]),
+	CLKDEV_DEV_ID("i2c-rcar.4", &mstp_clks[MSTP927]),
+	CLKDEV_DEV_ID("i2c-rcar.5", &mstp_clks[MSTP925]),
 };
 
 #define R8A7791_CLOCK_ROOT(e, m, p0, p1, p30, p31)		\
diff --git a/arch/arm/mach-shmobile/setup-r8a7791.c b/arch/arm/mach-shmobile/setup-r8a7791.c
index 6cc5464..63b0168 100644
--- a/arch/arm/mach-shmobile/setup-r8a7791.c
+++ b/arch/arm/mach-shmobile/setup-r8a7791.c
@@ -194,8 +194,167 @@ static struct platform_device eth_device = {
 	.resource = eth_resources,
 };
 
+/* I2C */
+static struct i2c_rcar_platform_data i2c_pd[] = {
+	{
+		.bus_speed	= 400000,
+		.icccr_cdf_width = I2C_RCAR_ICCCR_IS_3BIT,
+	}, {
+		.bus_speed	= 400000,
+		.icccr_cdf_width = I2C_RCAR_ICCCR_IS_3BIT,
+	}, {
+		/* Recommended values of bus speed 100kHz by H2 H/W spec. */
+		.icccr	= 6,
+		.icccr2	= 7,
+		.icmpr	= 10,
+		.ichpr	= 632,
+		.iclpr	= 640,
+	}, {
+		.bus_speed	= 400000,
+		.icccr_cdf_width = I2C_RCAR_ICCCR_IS_3BIT,
+	}, {
+		.bus_speed	= 400000,
+		.icccr_cdf_width = I2C_RCAR_ICCCR_IS_3BIT,
+	}, {
+		.bus_speed	= 400000,
+		.icccr_cdf_width = I2C_RCAR_ICCCR_IS_3BIT,
+	},
+};
+
+static struct resource rcar_i2c0_res[] = {
+	{
+		.start  = 0xe6508000,
+		.end    = (0xe6510000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(287),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource rcar_i2c1_res[] = {
+	{
+		.start  = 0xe6518000,
+		.end    = (0xe6520000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(288),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource rcar_i2c2_res[] = {
+	{
+		.start  = 0xe6530000,
+		.end    = (0xe6538000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(286),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource rcar_i2c3_res[] = {
+	{
+		.start  = 0xe6540000,
+		.end    = (0xe6548000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(290),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource rcar_i2c4_res[] = {
+	{
+		.start  = 0xe6520000,
+		.end    = (0xe6528000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(19),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource rcar_i2c5_res[] = {
+	{
+		.start  = 0xe6528000,
+		.end    = (0xe6530000 - 1),
+		.flags  = IORESOURCE_MEM,
+	}, {
+		.start  = gic_spi(20),
+		.flags  = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device i2c0_device = {
+	.name		= "i2c-rcar",
+	.id		= 0,
+	.dev = {
+		.platform_data = &i2c_pd[0],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c0_res),
+	.resource	= rcar_i2c0_res,
+};
+
+static struct platform_device i2c1_device = {
+	.name		= "i2c-rcar",
+	.id		= 1,
+	.dev = {
+		.platform_data = &i2c_pd[1],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c1_res),
+	.resource	= rcar_i2c1_res,
+};
+
+static struct platform_device i2c2_device = {
+	.name		= "i2c-rcar",
+	.id		= 2,
+	.dev = {
+		.platform_data = &i2c_pd[2],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c2_res),
+	.resource	= rcar_i2c2_res,
+};
+
+static struct platform_device i2c3_device = {
+	.name		= "i2c-rcar",
+	.id		= 3,
+	.dev = {
+		.platform_data = &i2c_pd[3],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c3_res),
+	.resource	= rcar_i2c3_res,
+};
+
+static struct platform_device i2c4_device = {
+	.name		= "i2c-rcar",
+	.id		= 4,
+	.dev = {
+		.platform_data = &i2c_pd[4],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c4_res),
+	.resource	= rcar_i2c4_res,
+};
+
+static struct platform_device i2c5_device = {
+	.name		= "i2c-rcar",
+	.id		= 5,
+	.dev = {
+		.platform_data = &i2c_pd[5],
+	},
+	.num_resources	= ARRAY_SIZE(rcar_i2c5_res),
+	.resource	= rcar_i2c5_res,
+};
+
 static struct platform_device *r8a7791_early_devices[] __initdata = {
 	&eth_device,
+	&i2c0_device,
+	&i2c1_device,
+	&i2c2_device,
+	&i2c3_device,
+	&i2c4_device,
+	&i2c5_device,
 };
 
 static struct renesas_irqc_config irqc0_data = {
-- 
1.8.3.2

