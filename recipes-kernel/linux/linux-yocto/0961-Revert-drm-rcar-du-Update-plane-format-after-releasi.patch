From 34309176740220302789e03a2313159f0ad9302f Mon Sep 17 00:00:00 2001
From: Simon Horman <horms+renesas@verge.net.au>
Date: Wed, 3 Jul 2013 13:38:27 +0900
Subject: [PATCH 0961/1083] Revert "drm/rcar-du: Update plane format after
 releasing hardware planes"

This reverts commit 4e6f7c21f4b847d6a1bb1c0f5afa5204bb565e9c.
(cherry picked from commit f0379789d2cc05d22be4b0039c54a912b4a13c67)

Signed-off-by: Ryo Kataoka <ryo.kataoka.wt@renesas.com>
---
 drivers/gpu/drm/rcar-du/rcar_du_crtc.c  |  7 +------
 drivers/gpu/drm/rcar-du/rcar_du_plane.c | 27 +++++++++++++--------------
 drivers/gpu/drm/rcar-du/rcar_du_plane.h |  4 +---
 3 files changed, 15 insertions(+), 23 deletions(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
index b820099..57e6b89 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
@@ -293,7 +293,6 @@ static int rcar_du_crtc_mode_set(struct drm_crtc *crtc,
 	struct rcar_du_device *rcdu = crtc->dev->dev_private;
 	struct rcar_du_crtc *rcrtc = to_rcar_crtc(crtc);
 	const struct rcar_du_format_info *format;
-	int ret;
 
 	format = rcar_du_format_info(crtc->fb->pixel_format);
 	if (format == NULL) {
@@ -302,10 +301,6 @@ static int rcar_du_crtc_mode_set(struct drm_crtc *crtc,
 		return -EINVAL;
 	}
 
-	ret = rcar_du_plane_reserve(rcrtc->plane, format);
-	if (ret < 0)
-		return ret;
-
 	rcrtc->plane->format = format;
 	rcrtc->plane->pitch = crtc->fb->pitches[0];
 
@@ -316,7 +311,7 @@ static int rcar_du_crtc_mode_set(struct drm_crtc *crtc,
 
 	rcar_du_plane_compute_base(rcrtc->plane, crtc->fb);
 
-	return 0;
+	return rcar_du_plane_reserve(rcrtc->plane);
 }
 
 static void rcar_du_crtc_mode_commit(struct drm_crtc *crtc)
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_plane.c b/drivers/gpu/drm/rcar-du/rcar_du_plane.c
index 3684de3..4fada59 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_plane.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_plane.c
@@ -38,8 +38,7 @@ static void rcar_du_plane_write(struct rcar_du_device *rcdu,
 	rcar_du_write(rcdu, index * PLANE_OFF + reg, data);
 }
 
-int rcar_du_plane_reserve(struct rcar_du_plane *plane,
-			  const struct rcar_du_format_info *format)
+int rcar_du_plane_reserve(struct rcar_du_plane *plane)
 {
 	struct rcar_du_device *rcdu = plane->dev;
 	unsigned int i;
@@ -51,7 +50,7 @@ int rcar_du_plane_reserve(struct rcar_du_plane *plane,
 		if (!(rcdu->planes.free & (1 << i)))
 			continue;
 
-		if (format->planes == 1 ||
+		if (plane->format->planes == 1 ||
 		    rcdu->planes.free & (1 << ((i + 1) % 8)))
 			break;
 	}
@@ -60,7 +59,7 @@ int rcar_du_plane_reserve(struct rcar_du_plane *plane,
 		goto done;
 
 	rcdu->planes.free &= ~(1 << i);
-	if (format->planes == 2)
+	if (plane->format->planes == 2)
 		rcdu->planes.free &= ~(1 << ((i + 1) % 8));
 
 	plane->hwindex = i;
@@ -264,16 +263,6 @@ rcar_du_plane_update(struct drm_plane *plane, struct drm_crtc *crtc,
 
 	nplanes = rplane->format ? rplane->format->planes : 0;
 
-	/* Reallocate hardware planes if the number of required planes has
-	 * changed.
-	 */
-	if (format->planes != nplanes) {
-		rcar_du_plane_release(rplane);
-		ret = rcar_du_plane_reserve(rplane, format);
-		if (ret < 0)
-			return ret;
-	}
-
 	rplane->crtc = crtc;
 	rplane->format = format;
 	rplane->pitch = fb->pitches[0];
@@ -285,6 +274,16 @@ rcar_du_plane_update(struct drm_plane *plane, struct drm_crtc *crtc,
 	rplane->width = crtc_w;
 	rplane->height = crtc_h;
 
+	/* Reallocate hardware planes if the number of required planes has
+	 * changed.
+	 */
+	if (format->planes != nplanes) {
+		rcar_du_plane_release(rplane);
+		ret = rcar_du_plane_reserve(rplane);
+		if (ret < 0)
+			return ret;
+	}
+
 	rcar_du_plane_compute_base(rplane, fb);
 	rcar_du_plane_setup(rplane);
 
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_plane.h b/drivers/gpu/drm/rcar-du/rcar_du_plane.h
index e8d2a26..1a0a440 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_plane.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_plane.h
@@ -19,7 +19,6 @@
 
 struct drm_framebuffer;
 struct rcar_du_device;
-struct rcar_du_format_info;
 
 struct rcar_du_plane {
 	struct drm_plane plane;
@@ -54,8 +53,7 @@ void rcar_du_plane_setup(struct rcar_du_plane *plane);
 void rcar_du_plane_update_base(struct rcar_du_plane *plane);
 void rcar_du_plane_compute_base(struct rcar_du_plane *plane,
 				struct drm_framebuffer *fb);
-int rcar_du_plane_reserve(struct rcar_du_plane *plane,
-			  const struct rcar_du_format_info *format);
+int rcar_du_plane_reserve(struct rcar_du_plane *plane);
 void rcar_du_plane_release(struct rcar_du_plane *plane);
 
 #endif /* __RCAR_DU_PLANE_H__ */
-- 
1.8.3.2

