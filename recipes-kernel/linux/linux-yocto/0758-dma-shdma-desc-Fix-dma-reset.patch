From 3d7ddaa5b3a47baf669373277ac045efdc39788e Mon Sep 17 00:00:00 2001
From: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
Date: Fri, 26 Jul 2013 16:52:34 +0900
Subject: [PATCH 0758/1083] dma: shdma-desc: Fix dma reset

Move the calling position of sh_dmae_rst before the setting of dma
channels.
Then, since the problem occurred in chclr_write, the interface and
the process of chclr_write was corrected.

Signed-off-by: Shunsuke Kataoka <shunsuke.kataoka.df@renesas.com>
---
 drivers/dma/sh/shdma-desc.c | 20 ++++++++------------
 drivers/dma/sh/shdma-desc.h |  3 +++
 2 files changed, 11 insertions(+), 12 deletions(-)

diff --git a/drivers/dma/sh/shdma-desc.c b/drivers/dma/sh/shdma-desc.c
index 396b68a..b2b6f23 100644
--- a/drivers/dma/sh/shdma-desc.c
+++ b/drivers/dma/sh/shdma-desc.c
@@ -57,12 +57,9 @@
 static DEFINE_SPINLOCK(sh_dmae_lock);
 static LIST_HEAD(sh_dmae_devices);
 
-static void chclr_write(struct sh_dmadesc_chan *sh_dc, u32 data)
+static void chclr_write(struct sh_dmadesc_device *shdev, u32 data)
 {
-	struct sh_dmadesc_device *shdev = to_sh_dev(sh_dc);
-
-	__raw_writel(data, shdev->chan_reg +
-		     shdev->pdata->channel[sh_dc->shdma_chan.id].chclr_offset);
+	__raw_writel(data, shdev->chan_reg + DMACLR / sizeof(u32));
 }
 
 static void sh_dmae_writel(struct sh_dmadesc_chan *sh_dc, u32 data, u32 reg)
@@ -142,9 +139,8 @@ static int sh_dmae_rst(struct sh_dmadesc_device *shdev)
 	dmaor = dmaor_read(shdev) & ~(DMAOR_AE | DMAOR_DME);
 
 	if (shdev->pdata->chclr_present) {
-		struct sh_dmadesc_chan *sh_chan = shdev->chan[0];
 		struct sh_dmadesc_pdata *pdata = shdev->pdata;
-		chclr_write(sh_chan, (1 << pdata->channel_num) - 1);
+		chclr_write(shdev, (1 << pdata->channel_num) - 1);
 	}
 
 	dmaor_write(shdev, dmaor | shdev->pdata->dmaor_init);
@@ -815,6 +811,11 @@ static int __devinit sh_dmae_probe(struct platform_device *pdev)
 	list_add_tail_rcu(&shdev->node, &sh_dmae_devices);
 	spin_unlock_irq(&sh_dmae_lock);
 
+	/* reset dma controller - only needed as a test */
+	err = sh_dmae_rst(shdev);
+	if (err)
+		goto rst_err;
+
 #if defined(CONFIG_CPU_SH4) || defined(CONFIG_ARCH_SHMOBILE)
 	chanirq_res = platform_get_resource(pdev, IORESOURCE_IRQ, 1);
 
@@ -896,11 +897,6 @@ static int __devinit sh_dmae_probe(struct platform_device *pdev)
 
 	pm_runtime_put(&pdev->dev);
 
-	/* reset dma controller - only needed as a test */
-	err = sh_dmae_rst(shdev);
-	if (err)
-		goto rst_err;
-
 	err = dma_async_device_register(&shdev->shdma_dev.dma_dev);
 	if (err < 0)
 		goto edmadevreg;
diff --git a/drivers/dma/sh/shdma-desc.h b/drivers/dma/sh/shdma-desc.h
index 44329ed..6679ddf 100644
--- a/drivers/dma/sh/shdma-desc.h
+++ b/drivers/dma/sh/shdma-desc.h
@@ -72,13 +72,16 @@ struct sh_dmadesc_desc {
 				struct sh_dmadesc_device, shdma_dev.dma_dev)
 
 /* DMA register */
+/*  channel offset  */
 #define SAR	0x00
 #define DAR	0x04
 #define TCR	0x08
 #define CHCR	0x0C
 #define CHCRB	0x1C
 #define DPBASE	0x50
+/*  base offset  */
 #define DMAOR	0x60
+#define DMACLR	0x80
 
 #define TEND	0x18 /* USB-DMAC */
 
-- 
1.8.3.2

