From 93da3bb5c5baf577ef6ab2ff9eb915e1b7ea8772 Mon Sep 17 00:00:00 2001
From: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
Date: Fri, 14 Jun 2013 15:44:14 +0900
Subject: [PATCH 0519/1083] mmc: sh_mobile_sdhi: Add dma_filter in private data

Signed-off-by: Shinobu Uehara <shinobu.uehara.xc@renesas.com>
(cherry picked from commit e71245ef812e04bc8a9bf3d81f35b9dbafa93987)

Signed-off-by: Ryo Kataoka <ryo.kataoka.wt@renesas.com>
---
 drivers/mmc/host/sh_mobile_sdhi.c | 19 +++++++++++++++++++
 drivers/mmc/host/tmio_mmc_dma.c   | 16 ++++++++++++++--
 include/linux/mfd/tmio.h          |  2 ++
 3 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/drivers/mmc/host/sh_mobile_sdhi.c b/drivers/mmc/host/sh_mobile_sdhi.c
index 7349e02..8cff05d 100644
--- a/drivers/mmc/host/sh_mobile_sdhi.c
+++ b/drivers/mmc/host/sh_mobile_sdhi.c
@@ -29,6 +29,7 @@
 #include <linux/mmc/sh_mobile_sdhi.h>
 #include <linux/mfd/tmio.h>
 #include <linux/sh_dma.h>
+#include <linux/sh_dma-desc.h>
 #include <linux/delay.h>
 
 #include "tmio_mmc.h"
@@ -117,6 +118,23 @@ static int sh_mobile_sdhi_write16_hook(struct tmio_mmc_host *host, int addr)
 	return 0;
 }
 
+static bool sh_mobile_sdhi_dma_filter(struct dma_chan *chan, void *arg)
+{
+
+	struct platform_device *pdev = to_platform_device(chan->device->dev);
+	struct sh_dmadesc_pdata *pdata = pdev->dev.platform_data;
+	dev_dbg(chan->device->dev, "%s: slave data %p\n", __func__, arg);
+
+	if (!pdata->dma_filter)
+		return false;
+	if (!pdata->dma_filter(pdev))
+		return false;
+
+	chan->private = arg;
+
+	return true;
+}
+
 static void sh_mobile_sdhi_cd_wakeup(const struct platform_device *pdev)
 {
 	mmc_detect_change(dev_get_drvdata(&pdev->dev), msecs_to_jiffies(100));
@@ -185,6 +203,7 @@ static int __devinit sh_mobile_sdhi_probe(struct platform_device *pdev)
 			priv->dma_priv.chan_priv_tx = &priv->param_tx.shdma_slave;
 			priv->dma_priv.chan_priv_rx = &priv->param_rx.shdma_slave;
 			priv->dma_priv.alignment_shift = 1; /* 2-byte alignment */
+			mmc_data->dma_filter = sh_mobile_sdhi_dma_filter;
 			mmc_data->dma = &priv->dma_priv;
 		}
 	}
diff --git a/drivers/mmc/host/tmio_mmc_dma.c b/drivers/mmc/host/tmio_mmc_dma.c
index fff9286..97a4404 100644
--- a/drivers/mmc/host/tmio_mmc_dma.c
+++ b/drivers/mmc/host/tmio_mmc_dma.c
@@ -281,7 +281,13 @@ void tmio_mmc_request_dma(struct tmio_mmc_host *host, struct tmio_mmc_data *pdat
 		dma_cap_zero(mask);
 		dma_cap_set(DMA_SLAVE, mask);
 
-		host->chan_tx = dma_request_channel(mask, tmio_mmc_filter,
+		if (pdata->dma_filter)
+			host->chan_tx = dma_request_channel(mask,
+						pdata->dma_filter,
+						    pdata->dma->chan_priv_tx);
+		else
+			host->chan_tx = dma_request_channel(mask,
+						tmio_mmc_filter,
 						    pdata->dma->chan_priv_tx);
 		dev_dbg(&host->pdev->dev, "%s: TX: got channel %p\n", __func__,
 			host->chan_tx);
@@ -289,7 +295,13 @@ void tmio_mmc_request_dma(struct tmio_mmc_host *host, struct tmio_mmc_data *pdat
 		if (!host->chan_tx)
 			return;
 
-		host->chan_rx = dma_request_channel(mask, tmio_mmc_filter,
+		if (pdata->dma_filter)
+			host->chan_rx = dma_request_channel(mask,
+						pdata->dma_filter,
+						    pdata->dma->chan_priv_rx);
+		else
+			host->chan_rx = dma_request_channel(mask,
+						tmio_mmc_filter,
 						    pdata->dma->chan_priv_rx);
 		dev_dbg(&host->pdev->dev, "%s: RX: got channel %p\n", __func__,
 			host->chan_rx);
diff --git a/include/linux/mfd/tmio.h b/include/linux/mfd/tmio.h
index 52c888b..9cf576b 100644
--- a/include/linux/mfd/tmio.h
+++ b/include/linux/mfd/tmio.h
@@ -7,6 +7,7 @@
 #include <linux/jiffies.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
+#include <linux/dmaengine.h>
 
 #define tmio_ioread8(addr) readb(addr)
 #define tmio_ioread16(addr) readw(addr)
@@ -127,6 +128,7 @@ struct tmio_mmc_data {
 	int (*get_cd)(struct platform_device *host);
 	int (*get_ro)(struct platform_device *host);
 	int (*write16_hook)(struct tmio_mmc_host *host, int addr);
+	bool (*dma_filter)(struct dma_chan *chan, void *arg);
 	/* clock management callbacks */
 	int (*clk_enable)(struct platform_device *pdev, unsigned int *f);
 	void (*clk_disable)(struct platform_device *pdev);
-- 
1.8.3.2

