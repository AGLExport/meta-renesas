diff --git a/xf-adsp-alsa.c b/xf-adsp-alsa.c
index 0695024..6f2dbda 100644
--- a/xf-adsp-alsa.c
+++ b/xf-adsp-alsa.c
@@ -539,16 +539,24 @@ static int snd_adsp_tdm_record_prepare(struct snd_adsp_tdm_record *tdm_record,
 static int
 snd_adsp_tdm_playback_deinit(struct snd_adsp_tdm_playback *tdm_playback);
 static int snd_adsp_tdm_record_deinit(struct snd_adsp_tdm_record *tdm_record);
-static int snd_adsp_pcm_open(struct snd_pcm_substream *substream);
-static int snd_adsp_pcm_close(struct snd_pcm_substream *substream);
-static int snd_adsp_pcm_hw_params(struct snd_pcm_substream *substream,
+static int snd_adsp_pcm_open(struct snd_soc_component *component,
+						struct snd_pcm_substream *substream);
+static int snd_adsp_pcm_close(struct snd_soc_component *component,
+							struct snd_pcm_substream *substream);
+static int snd_adsp_pcm_hw_params(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream,
 				  struct snd_pcm_hw_params *hw_params);
-static int snd_adsp_pcm_hw_free(struct snd_pcm_substream *substream);
-static int snd_adsp_pcm_prepare(struct snd_pcm_substream *substream);
-static int snd_adsp_pcm_trigger(struct snd_pcm_substream *substream, int idx);
+static int snd_adsp_pcm_hw_free(struct snd_soc_component *component,
+					struct snd_pcm_substream *substream);
+static int snd_adsp_pcm_prepare(struct snd_soc_component *component,
+						struct snd_pcm_substream *substream);
+static int snd_adsp_pcm_trigger(struct snd_soc_component *component,
+							struct snd_pcm_substream *substream, int idx);
 static snd_pcm_uframes_t
-snd_adsp_pcm_pointer(struct snd_pcm_substream *substream);
-static int snd_adsp_pcm_ack(struct snd_pcm_substream *substream);
+snd_adsp_pcm_pointer(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream);
+static int snd_adsp_pcm_ack(struct snd_soc_component *component,
+					struct snd_pcm_substream *substream);
 static int snd_adsp_control_volume_info(struct snd_kcontrol *kcontrol,
 					struct snd_ctl_elem_info *uinfo);
 static int snd_adsp_control_volume_get(struct snd_kcontrol *kcontrol,
@@ -583,7 +591,8 @@ static void snd_adsp_get_eqz_params_from_control(
 				struct xf_adsp_equalizer_params *eqz_params,
 				struct xf_adsp_equalizer_params *eqz_ctr_params,
 				bool flag);
-static int snd_adsp_pcm_new(struct snd_soc_pcm_runtime *runtime);
+static int snd_adsp_pcm_new(struct snd_soc_component *component,
+					struct snd_soc_pcm_runtime *runtime);
 static int snd_adsp_probe(struct platform_device *pdev);
 static int snd_adsp_remove(struct platform_device *pdev);
 
@@ -756,8 +765,8 @@ snd_adsp_get_dai_id_from_substream(struct snd_pcm_substream *substream)
 {
 	struct snd_soc_pcm_runtime *rtd;
 
-	rtd = (struct snd_soc_pcm_runtime *)substream->private_data;
-	return rtd->cpu_dai->id;
+	rtd = asoc_substream_to_rtd(substream);
+	return asoc_rtd_to_cpu(rtd, 0)->id;
 }
 
 /** **************************************************************************
@@ -773,8 +782,9 @@ snd_adsp_get_drvdata_from_substream(struct snd_pcm_substream *substream)
 {
 	struct snd_soc_pcm_runtime *rtd;
 
-	rtd = (struct snd_soc_pcm_runtime *)substream->private_data;
-	return snd_soc_dai_get_drvdata(rtd->cpu_dai);
+	rtd = asoc_substream_to_rtd(substream);
+	return snd_soc_dai_get_drvdata(asoc_rtd_to_cpu(rtd, 0));
+
 }
 
 /** **************************************************************************
@@ -1716,7 +1726,8 @@ static int snd_adsp_tdm_record_deinit(struct snd_adsp_tdm_record *tdm_record)
  *  \retval	0			Success
  *  \retval	-EINVAL			Error
  *****************************************************************************/
-static int snd_adsp_pcm_open(struct snd_pcm_substream *substream)
+static int snd_adsp_pcm_open(struct snd_soc_component *component,
+					struct snd_pcm_substream *substream)
 {
 	/* get ADSP soundcard and CPU DAI index */
 	struct snd_adsp_card *adsp_card;
@@ -1815,7 +1826,8 @@ static int snd_adsp_pcm_open(struct snd_pcm_substream *substream)
  *  \retval	0			Success
  *  \retval	-EINVAL			Error
  *****************************************************************************/
-static int snd_adsp_pcm_close(struct snd_pcm_substream *substream)
+static int snd_adsp_pcm_close(struct snd_soc_component *component,
+					struct snd_pcm_substream *substream)
 {
 	/* get ADSP soundcard and CPU DAI index */
 	struct snd_adsp_card *adsp_card =
@@ -1868,7 +1880,8 @@ static int snd_adsp_pcm_close(struct snd_pcm_substream *substream)
  *  \retval	0			Success
  *  \retval	-ENOMEM			Cannot allocate ALSA buffer
  *****************************************************************************/
-static int snd_adsp_pcm_hw_params(struct snd_pcm_substream *substream,
+static int snd_adsp_pcm_hw_params(struct snd_soc_component *component,
+			struct snd_pcm_substream *substream,
 				  struct snd_pcm_hw_params *hw_params)
 {
 	struct snd_adsp_base_info *base = NULL;
@@ -1976,7 +1989,8 @@ static int snd_adsp_pcm_hw_params(struct snd_pcm_substream *substream,
  *  \retval	0			Success
  *  \retval	-EINVAL			Cannot deallocate buffer
  *****************************************************************************/
-static int snd_adsp_pcm_hw_free(struct snd_pcm_substream *substream)
+static int snd_adsp_pcm_hw_free(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream)
 {
 	int dai_idx = snd_adsp_get_dai_id_from_substream(substream);
 
@@ -1996,7 +2010,8 @@ static int snd_adsp_pcm_hw_free(struct snd_pcm_substream *substream)
  *  \retval		 0		Success
  *  \retval		 -EINVAL	Error
  *****************************************************************************/
-static int snd_adsp_pcm_prepare(struct snd_pcm_substream *substream)
+static int snd_adsp_pcm_prepare(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream)
 {
 	/* get ADSP soundcard and CPU DAI index */
 	struct snd_adsp_card *
@@ -2038,7 +2053,8 @@ static int snd_adsp_pcm_prepare(struct snd_pcm_substream *substream)
  *  \retval	0			Success
  *  \retval	-EINVAL			Error
  *****************************************************************************/
-static int snd_adsp_pcm_trigger(struct snd_pcm_substream *substream, int idx)
+static int snd_adsp_pcm_trigger(struct snd_soc_component *component,
+				struct snd_pcm_substream *substream, int idx)
 {
 	struct snd_adsp_base_info *base;
 	unsigned char *dma_buf;
@@ -2111,7 +2127,8 @@ static int snd_adsp_pcm_trigger(struct snd_pcm_substream *substream, int idx)
  *  \retval	  position		HW data position
  *****************************************************************************/
 static snd_pcm_uframes_t
-snd_adsp_pcm_pointer(struct snd_pcm_substream *substream)
+snd_adsp_pcm_pointer(struct snd_soc_component *component,
+			struct snd_pcm_substream *substream)
 {
 	struct snd_adsp_base_info *base;
 
@@ -2224,7 +2241,8 @@ snd_adsp_copy_data(void *dst, void *src, int dst_size, int src_size)
  *  \retval	0			Success
  *  \retval	-EINVAL			Error
  *****************************************************************************/
-static int snd_adsp_pcm_ack(struct snd_pcm_substream *substream)
+static int snd_adsp_pcm_ack(struct snd_soc_component *component,
+					struct snd_pcm_substream *substream)
 {
 	struct snd_adsp_base_info *base;
 	struct snd_pcm_runtime *runtime = substream->runtime;
@@ -3556,18 +3574,7 @@ static struct snd_kcontrol_new snd_adsp_tdm_capture_sample_rate_in_control = {
 };
 
 /** PCM callback function of the sound card */
-static struct snd_pcm_ops snd_adsp_pcm_ops = {
-	.open = &snd_adsp_pcm_open,	/* PRQA S 1053 10 */
-	.close = &snd_adsp_pcm_close,
-	.ioctl = &snd_pcm_lib_ioctl,
-	.hw_params = &snd_adsp_pcm_hw_params,
-	.hw_free = &snd_adsp_pcm_hw_free,
-	.prepare = &snd_adsp_pcm_prepare,
-	.trigger = &snd_adsp_pcm_trigger,
-	.pointer = &snd_adsp_pcm_pointer,
-	.mmap = &snd_adsp_pcm_mmap,
-	.ack = &snd_adsp_pcm_ack
-};
+
 
 /*******************************************************************
  * Internal functions
@@ -3638,7 +3645,8 @@ static void snd_adsp_get_eqz_params_from_control(
  *  \retval	  0		Success
  *  \retval	 -EINVAL	Cannot register control interface
  ******************************************************************************/
-static int snd_adsp_pcm_new(struct snd_soc_pcm_runtime *runtime)
+static int snd_adsp_pcm_new(struct snd_soc_component *component,
+				struct snd_soc_pcm_runtime *runtime)
 {
 	int i = 0, err = 0;
 	int id;
@@ -3649,10 +3657,10 @@ static int snd_adsp_pcm_new(struct snd_soc_pcm_runtime *runtime)
 	card = runtime->card->snd_card;
 
 	/* get driver data */
-	adsp_card = snd_soc_dai_get_drvdata(runtime->cpu_dai);
+	adsp_card = snd_soc_dai_get_drvdata(asoc_rtd_to_cpu(runtime, 0));
 
 	/* get the ID of CPU DAI */
-	id = runtime->cpu_dai->id;
+	id = asoc_rtd_to_cpu(runtime, 0)->id;
 
 	/* register control interfaces */
 	if (id == RDR_DAI_IDX0 || id == RDR_DAI_IDX1 ||
@@ -3694,10 +3702,11 @@ static int snd_adsp_pcm_new(struct snd_soc_pcm_runtime *runtime)
 				return -EINVAL;
 		}
 
-		return snd_pcm_lib_preallocate_pages_for_all(runtime->pcm,
+		snd_pcm_lib_preallocate_pages_for_all(runtime->pcm,
 				SNDRV_DMA_TYPE_CONTINUOUS,
 				snd_dma_continuous_data(GFP_KERNEL),
 				TDM_MAX_BUFFER_BYTES, TDM_MAX_BUFFER_BYTES);
+		return 0;
 	}
 
 	return 0;
@@ -3708,14 +3717,17 @@ static int snd_adsp_pcm_new(struct snd_soc_pcm_runtime *runtime)
  * ***************************************************************************/
 
 /** callback function of platform driver */
-static struct snd_soc_platform_driver snd_adsp_platform = {
-	.pcm_new	= &snd_adsp_pcm_new,
-	.ops		= &snd_adsp_pcm_ops,
-};
-
-/** component information of driver */
 static const struct snd_soc_component_driver snd_adsp_component = {
-	.name		= "snd_adsp",
+	.pcm_construct	= &snd_adsp_pcm_new,
+	.open = &snd_adsp_pcm_open,
+	.close = &snd_adsp_pcm_close,
+	.hw_params = &snd_adsp_pcm_hw_params,
+	.hw_free = &snd_adsp_pcm_hw_free,
+	.prepare = &snd_adsp_pcm_prepare,
+	.trigger = &snd_adsp_pcm_trigger,
+	.pointer = &snd_adsp_pcm_pointer,
+	.ack = &snd_adsp_pcm_ack,
+	.name = "snd_adsp",
 };
 
 /** DAI information of ADSP ALSA driver */
@@ -4047,12 +4059,6 @@ static int snd_adsp_probe(struct platform_device *pdev)
 	if (snd_adsp_device_params_parse(&pdev->dev) < 0)
 		return -EINVAL;
 
-	/* register platform device */
-	if (snd_soc_register_platform(&pdev->dev, &snd_adsp_platform) < 0) {
-		snd_soc_unregister_platform(&pdev->dev);
-		return -EINVAL;
-	}
-
 	/* fill format information of sound DAI driver for Rdr/Cap function */
 	for (i = 0; i < (MAX_DAI_IDX - 1); i++) {
 		snd_adsp_dai[i].playback.rates = SND_ADSP_SAMPLE_RATES;
@@ -4077,16 +4083,16 @@ static int snd_adsp_probe(struct platform_device *pdev)
 	snd_adsp_dai[i].capture.channels_min = TDM_MIN_CHANNEL;
 	snd_adsp_dai[i].capture.channels_max = TDM_MAX_CHANNEL;
 
-	/* register CPU dai */
-	if (snd_soc_register_component(&pdev->dev, &snd_adsp_component,
-				       snd_adsp_dai,
-				       ARRAY_SIZE(snd_adsp_dai)) < 0) {
-		snd_soc_unregister_platform(&pdev->dev);
+	/*
+	 *	asoc register
+	 */
+	if (devm_snd_soc_register_component(&pdev->dev, &snd_adsp_component,
+			snd_adsp_dai, ARRAY_SIZE(snd_adsp_dai)) < 0) {
+		dev_err(&pdev->dev, "failed to register component\n");
 		return -EINVAL;
 	}
 
 	dev_info(&pdev->dev, "probed\n");
-
 	/* success */
 	return 0;
 }
@@ -4111,10 +4117,6 @@ static int snd_adsp_remove(struct platform_device *pdev)
 	/* release the ADSP sound card */
 	kfree(adsp_card);
 
-	/* unregister platform driver */
-	snd_soc_unregister_component(&pdev->dev);
-	snd_soc_unregister_platform(&pdev->dev);
-
 	/* success */
 	return 0;
 }
