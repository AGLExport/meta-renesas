From c19d9c4d0c96818dda47c6a6d70f84449c284ff8 Mon Sep 17 00:00:00 2001
From: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
Date: Mon, 3 Aug 2015 16:46:15 +0900
Subject: [PATCH 57/85] drm: rcar-du: Add DPLL support

Signed-off-by: Koji Matsuoka <koji.matsuoka.xm@renesas.com>
---
 drivers/gpu/drm/rcar-du/rcar_du_crtc.c  |   40 +++++++++++++++++++++++++++----
 drivers/gpu/drm/rcar-du/rcar_du_crtc.h  |    2 ++
 drivers/gpu/drm/rcar-du/rcar_du_drv.c   |    1 +
 drivers/gpu/drm/rcar-du/rcar_du_drv.h   |    1 +
 drivers/gpu/drm/rcar-du/rcar_du_plane.h |    7 +++++-
 drivers/gpu/drm/rcar-du/rcar_du_regs.h  |   21 +++++++++++++++-
 6 files changed, 65 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
index 196b940..acda3d5 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_crtc.c
@@ -1,7 +1,7 @@
 /*
  * rcar_du_crtc.c  --  R-Car Display Unit CRTCs
  *
- * Copyright (C) 2013-2014 Renesas Electronics Corporation
+ * Copyright (C) 2013-2015 Renesas Electronics Corporation
  *
  * Contact: Laurent Pinchart (laurent.pinchart@ideasonboard.com)
  *
@@ -109,11 +109,13 @@ static void rcar_du_crtc_put(struct rcar_du_crtc *rcrtc)
 static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 {
 	const struct drm_display_mode *mode = &rcrtc->crtc.state->adjusted_mode;
+	struct rcar_du_device *rcdu = rcrtc->group->dev;
 	unsigned long mode_clock = mode->clock * 1000;
 	unsigned long clk;
 	u32 value;
 	u32 escr;
 	u32 div;
+	u32 extdiv = 0;
 
 	/* Compute the clock divisor and select the internal or external dot
 	 * clock based on the requested frequency.
@@ -127,12 +129,14 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 		unsigned long extclk;
 		unsigned long extrate;
 		unsigned long rate;
-		u32 extdiv;
 
-		extclk = clk_get_rate(rcrtc->extclock);
+		if ((0x01 << rcrtc->index) & rcdu->info->dpll_ch)
+			extclk = clk_get_rate(rcrtc->extclock) * DPLL_MULTI;
+		else
+			extclk = clk_get_rate(rcrtc->extclock);
+
 		extdiv = DIV_ROUND_CLOSEST(extclk, mode_clock);
 		extdiv = clamp(extdiv, 1U, 64U) - 1;
-
 		rate = clk / (div + 1);
 		extrate = extclk / (extdiv + 1);
 
@@ -140,7 +144,33 @@ static void rcar_du_crtc_set_display_timing(struct rcar_du_crtc *rcrtc)
 		    abs((long)rate - (long)mode_clock)) {
 			dev_dbg(rcrtc->group->dev->dev,
 				"crtc%u: using external clock\n", rcrtc->index);
-			escr = extdiv | ESCR_DCLKSEL_DCLKIN;
+			if ((0x01 << rcrtc->index) & rcdu->info->dpll_ch)
+				escr = ESCR_DCLKSEL_DCLKIN;
+			else
+				escr = extdiv | ESCR_DCLKSEL_DCLKIN;
+		}
+
+		/* DPLL setting */
+		if (rcar_du_has(rcdu, RCAR_DU_FEATURE_GEN3_REGS)) {
+			u32 dpllcr = 0;
+
+			/* For R-Car H3 */
+			if (rcrtc->index == DU_CH_1) {
+				dpllcr = DPLLCR_CODE | DPLLCR_PLCS1 |
+				   DPLLCR_CLKE | DPLLCR_FDPLL(extdiv) |
+				   DPLLCR_N(107) | DPLLCR_M(1) | DPLLCR_STBY |
+				   DPLLCR_INCS_DPLL01_DOTCLKIN13;
+				rcar_du_group_write(rcrtc->group, DPLLCR,
+								 dpllcr);
+			}
+			if (rcrtc->index == DU_CH_2) {
+				dpllcr = DPLLCR_CODE | DPLLCR_PLCS0 |
+				   DPLLCR_CLKE | DPLLCR_FDPLL(extdiv) |
+				   DPLLCR_N(107) | DPLLCR_M(1) | DPLLCR_STBY |
+				   DPLLCR_INCS_DPLL01_DOTCLKIN02;
+				rcar_du_group_write(rcrtc->group, DPLLCR,
+								 dpllcr);
+			}
 		}
 	}
 
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_crtc.h b/drivers/gpu/drm/rcar-du/rcar_du_crtc.h
index 587c1f7..e2728a2 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_crtc.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_crtc.h
@@ -20,6 +20,8 @@
 #include <drm/drmP.h>
 #include <drm/drm_crtc.h>
 
+#define DPLL_MULTI	54	/* 1.782GHz source clock use in DPLL*/
+
 struct rcar_du_group;
 struct rcar_du_vsp;
 
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_drv.c b/drivers/gpu/drm/rcar-du/rcar_du_drv.c
index db2ab14..2b9292d 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_drv.c
+++ b/drivers/gpu/drm/rcar-du/rcar_du_drv.c
@@ -163,6 +163,7 @@ static const struct rcar_du_device_info rcar_du_r8a7795_info = {
 	.num_lvds = 1,
 	.hdmi_irq_offset = 4,
 	.hdmi_res_offset = 2,
+	.dpll_ch =  BIT(1) | BIT(2),
 };
 
 static const struct of_device_id rcar_du_of_table[] = {
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_drv.h b/drivers/gpu/drm/rcar-du/rcar_du_drv.h
index 31adeef..9374ee7 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_drv.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_drv.h
@@ -69,6 +69,7 @@ struct rcar_du_device_info {
 	unsigned int num_lvds;
 	unsigned int hdmi_irq_offset;
 	unsigned int hdmi_res_offset;
+	unsigned int dpll_ch;
 };
 
 #define RCAR_DU_MAX_CRTCS		3
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_plane.h b/drivers/gpu/drm/rcar-du/rcar_du_plane.h
index b18b7b2..47fad23 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_plane.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_plane.h
@@ -1,7 +1,7 @@
 /*
  * rcar_du_plane.h  --  R-Car Display Unit Planes
  *
- * Copyright (C) 2013-2014 Renesas Electronics Corporation
+ * Copyright (C) 2013-2015 Renesas Electronics Corporation
  *
  * Contact: Laurent Pinchart (laurent.pinchart@ideasonboard.com)
  *
@@ -34,6 +34,11 @@ enum rcar_du_plane_source {
 	RCAR_DU_PLANE_VSPD1,
 };
 
+#define DU_CH_0		0
+#define DU_CH_1		1
+#define DU_CH_2		2
+#define DU_CH_3		3
+
 struct rcar_du_plane {
 	struct drm_plane plane;
 	struct rcar_du_group *group;
diff --git a/drivers/gpu/drm/rcar-du/rcar_du_regs.h b/drivers/gpu/drm/rcar-du/rcar_du_regs.h
index ac9c3e5..079f821 100644
--- a/drivers/gpu/drm/rcar-du/rcar_du_regs.h
+++ b/drivers/gpu/drm/rcar-du/rcar_du_regs.h
@@ -1,7 +1,7 @@
 /*
  * rcar_du_regs.h  --  R-Car Display Unit Registers Definitions
  *
- * Copyright (C) 2013 Renesas Electronics Corporation
+ * Copyright (C) 2013-2015 Renesas Electronics Corporation
  *
  * Contact: Laurent Pinchart (laurent.pinchart@ideasonboard.com)
  *
@@ -260,6 +260,25 @@
 #define DIDSR_PDCS_CLK(n, clk)	(clk << ((n) * 2))
 #define DIDSR_PDCS_MASK(n)	(3 << ((n) * 2))
 
+#define DPLLCR			0x20044
+#define DPLLCR_CODE		(0x95 << 24)
+#define DPLLCR_PLCS1		(1 << 23)
+#define DPLLCR_PLCS0		(1 << 21)
+#define DPLLCR_CLKE		(1 << 18)
+#define DPLLCR_FDPLL(n)		((n) << 12)	/* n=0 Setting prohibited */
+/* H'00 to H'26, H'78 to H'7F: Setting prohibited.*/
+#define DPLLCR_N(n)		((n) << 5)
+#define DPLLCR_M(n)		((n) << 3)
+#define DPLLCR_STBY		(1 << 2)
+#define DPLLCR_INCS_DPLL01_DOTCLKIN02	(0 << 0)
+#define DPLLCR_INCS_DPLL01_DOTCLKIN13	(1 << 1)
+
+#define DPLLC2R			0x20048
+#define DPLLC2R_CODE		(0x95 << 24)
+#define DPLLC2R_SELC		(1 << 12)
+#define DPLLC2R_M(n)		((n) << 8)
+#define DPLLC2R_FDPLL(n)	((n) << 0)	/* n=0 Setting prohibited */
+
 /* -----------------------------------------------------------------------------
  * Display Timing Generation Registers
  */
-- 
1.7.9.5

