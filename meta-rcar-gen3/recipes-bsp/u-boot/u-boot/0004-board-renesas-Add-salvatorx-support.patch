From 781d8d5ed28976d4e8c3860cd3def85d5b52811c Mon Sep 17 00:00:00 2001
From: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
Date: Mon, 31 Aug 2015 16:22:59 +0900
Subject: board: renesas: Add salvatorx support

Signed-off-by: Hiroyuki Yokoyama <hiroyuki.yokoyama.vx@renesas.com>
---
 board/renesas/rcar-gen3-common/common.c |  65 +++++++++
 board/renesas/salvatorx/Kconfig         |  15 ++
 board/renesas/salvatorx/MAINTAINERS     |   6 +
 board/renesas/salvatorx/Makefile        |   9 ++
 board/renesas/salvatorx/salvatorx.c     | 242 ++++++++++++++++++++++++++++++++
 5 files changed, 337 insertions(+)
 create mode 100644 board/renesas/rcar-gen3-common/common.c
 create mode 100644 board/renesas/salvatorx/Kconfig
 create mode 100644 board/renesas/salvatorx/MAINTAINERS
 create mode 100644 board/renesas/salvatorx/Makefile
 create mode 100644 board/renesas/salvatorx/salvatorx.c

diff --git a/board/renesas/rcar-gen3-common/common.c b/board/renesas/rcar-gen3-common/common.c
new file mode 100644
index 0000000..7421934
--- /dev/null
+++ b/board/renesas/rcar-gen3-common/common.c
@@ -0,0 +1,65 @@
+/*
+ * board/renesas/rcar-gen3-common/common.c
+ *	This file defines common function for R-Car Gen3
+ *
+ * Copyright (C) 2015 Renesas Electronics Corporation
+ * Based on board/renesas/rcar-gen2-common/common.c
+ * Copyright (C) 2013 Renesas Electronics Corporation
+ * Copyright (C) 2013 Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
+ *
+ * SPDX-License-Identifier: GPL-2.0+
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/arch/rcar_gen3.h>
+#include <asm/arch/rcar-mstp.h>
+
+#define TSTR0		0x04
+#define TSTR0_STR0	0x01
+
+static struct mstp_ctl mstptbl[] = {
+	{ SMSTPCR0, MSTP0_BITS, CONFIG_SMSTP0_ENA,
+		RMSTPCR0, MSTP0_BITS, CONFIG_RMSTP0_ENA },
+	{ SMSTPCR1, MSTP1_BITS, CONFIG_SMSTP1_ENA,
+		RMSTPCR1, MSTP1_BITS, CONFIG_RMSTP1_ENA },
+	{ SMSTPCR2, MSTP2_BITS, CONFIG_SMSTP2_ENA,
+		RMSTPCR2, MSTP2_BITS, CONFIG_RMSTP2_ENA },
+	{ SMSTPCR3, MSTP3_BITS, CONFIG_SMSTP3_ENA,
+		RMSTPCR3, MSTP3_BITS, CONFIG_RMSTP3_ENA },
+	{ SMSTPCR4, MSTP4_BITS, CONFIG_SMSTP4_ENA,
+		RMSTPCR4, MSTP4_BITS, CONFIG_RMSTP4_ENA },
+	{ SMSTPCR5, MSTP5_BITS, CONFIG_SMSTP5_ENA,
+		RMSTPCR5, MSTP5_BITS, CONFIG_RMSTP5_ENA },
+/* under construction. address no information at UM rev0.2
+	{ SMSTPCR6, MSTP6_BITS, CONFIG_SMSTP6_ENA,
+		RMSTPCR6, MSTP6_BITS, CONFIG_RMSTP6_ENA },
+*/
+	{ SMSTPCR7, MSTP7_BITS, CONFIG_SMSTP7_ENA,
+		RMSTPCR7, MSTP7_BITS, CONFIG_RMSTP7_ENA },
+	{ SMSTPCR8, MSTP8_BITS, CONFIG_SMSTP8_ENA,
+		RMSTPCR8, MSTP8_BITS, CONFIG_RMSTP8_ENA },
+	{ SMSTPCR9, MSTP9_BITS, CONFIG_SMSTP9_ENA,
+		RMSTPCR9, MSTP9_BITS, CONFIG_RMSTP9_ENA },
+	{ SMSTPCR10, MSTP10_BITS, CONFIG_SMSTP10_ENA,
+		 RMSTPCR10, MSTP10_BITS, CONFIG_RMSTP10_ENA },
+	{ SMSTPCR11, MSTP11_BITS, CONFIG_SMSTP1_ENA,
+		 RMSTPCR11, MSTP11_BITS, CONFIG_RMSTP11_ENA },
+};
+
+void arch_preboot_os(void)
+{
+	int i;
+
+	/* stop TMU0 (secure) */
+	mstp_clrbits_le32(TMU_BASE + TSTR0, TMU_BASE + TSTR0, TSTR0_STR0);
+
+	/* Stop module clock */
+	for (i = 0; i < ARRAY_SIZE(mstptbl); i++) {
+		mstp_setclrbits_le32((uintptr_t)mstptbl[i].s_addr,
+				     mstptbl[i].s_dis, mstptbl[i].s_ena);
+		mstp_setclrbits_le32((uintptr_t)mstptbl[i].r_addr,
+				     mstptbl[i].r_dis, mstptbl[i].r_ena);
+	}
+}
diff --git a/board/renesas/salvatorx/Kconfig b/board/renesas/salvatorx/Kconfig
new file mode 100644
index 0000000..d9ab925
--- /dev/null
+++ b/board/renesas/salvatorx/Kconfig
@@ -0,0 +1,15 @@
+if TARGET_SALVATORX
+
+config SYS_SOC
+	default "rcar_gen3"
+
+config SYS_BOARD
+	default "salvatorx"
+
+config SYS_VENDOR
+	default "renesas"
+
+config SYS_CONFIG_NAME
+	default "salvatorx"
+
+endif
diff --git a/board/renesas/salvatorx/MAINTAINERS b/board/renesas/salvatorx/MAINTAINERS
new file mode 100644
index 0000000..d898503
--- /dev/null
+++ b/board/renesas/salvatorx/MAINTAINERS
@@ -0,0 +1,6 @@
+SALVATORX BOARD
+M:	foo <foo@renesas.com>
+S:	Maintained
+F:	board/renesas/salvatorx/
+F:	include/configs/salvatorx.h
+F:	configs/salvatorx_defconfig
diff --git a/board/renesas/salvatorx/Makefile b/board/renesas/salvatorx/Makefile
new file mode 100644
index 0000000..bd95e2d
--- /dev/null
+++ b/board/renesas/salvatorx/Makefile
@@ -0,0 +1,9 @@
+#
+# board/renesas/salvatorx/Makefile
+#
+# Copyright (C) 2015 Renesas Electronics Corporation
+#
+# SPDX-License-Identifier: GPL-2.0+
+#
+
+obj-y	:= salvatorx.o ../rcar-gen3-common/common.o
diff --git a/board/renesas/salvatorx/salvatorx.c b/board/renesas/salvatorx/salvatorx.c
new file mode 100644
index 0000000..d9320db
--- /dev/null
+++ b/board/renesas/salvatorx/salvatorx.c
@@ -0,0 +1,242 @@
+/*
+ * board/renesas/salvatorx/salvatorx.c
+ *     This file is Salvator-X board support.
+ *
+ * Copyright (C) 2015 Renesas Electronics Corporation
+ *
+ * SPDX-License-Identifier: GPL-2.0+
+ */
+
+#include <common.h>
+#include <malloc.h>
+#include <netdev.h>
+#include <dm.h>
+#include <dm/platform_data/serial_sh.h>
+#include <asm/processor.h>
+#include <asm/mach-types.h>
+#include <asm/io.h>
+#include <asm/errno.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/gpio.h>
+#include <asm/arch/gpio.h>
+#include <asm/arch/rcar_gen3.h>
+#include <asm/arch/rcar-mstp.h>
+#include <asm/arch/sh_sdhi.h>
+#include <i2c.h>
+#include <mmc.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define CPGWPCR	0xE6150904
+#define CPGWPR  0xE615090C
+
+#define CLK2MHZ(clk)	(clk / 1000 / 1000)
+void s_init(void)
+{
+	struct rcar_rwdt *rwdt = (struct rcar_rwdt *)RWDT_BASE;
+	struct rcar_swdt *swdt = (struct rcar_swdt *)SWDT_BASE;
+
+	/* Watchdog init */
+	writel(0xA5A5A500, &rwdt->rwtcsra);
+	writel(0xA5A5A500, &swdt->swtcsra);
+
+	writel(0xA5A50000, CPGWPCR);
+	writel(0xFFFFFFFF, CPGWPR);
+}
+
+#define TMU0_MSTP125	(1 << 25)		/* secure */
+#define TMU1_MSTP124	(1 << 24)		/* non-secure */
+#define SCIF1_MSTP206	(1 << 6)		/* SCIF0 is GPIO */
+#define SD0_MSTP314	(1 << 14)
+#define SD1_MSTP313	(1 << 13)
+#define SD2_MSTP312	(1 << 12)		/* either MMC0 */
+#define SD3_MSTP311	(1 << 11)		/* either MMC1 */
+
+#define SD3CKCR		0xE615026C
+#define SD_SRCFC_DIV1_DIV4	(0 << 2)
+#define SD_SRCFC_DIV2_DIV8	(1 << 2)
+#define SD_SRCFC_DIV4_DIV16	(2 << 2)
+#define SD_SRCFC_STOP_DIV32	(3 << 2)
+#define SD_SRCFC_STOP_DIV64	(4 << 2)
+#define SD_FC_DIV2		0
+#define SD_FC_DIV4		1
+#define SD_FC_DIV5		2
+#define SDH800_SD200		(SD_SRCFC_DIV1_DIV4 | SD_FC_DIV4)
+#define SDH400_SD200		(SD_SRCFC_DIV2_DIV8 | SD_FC_DIV2)
+
+int board_early_init_f(void)
+{
+	/* TMU0,1 */		/* which use ? */
+	mstp_clrbits_le32(MSTPSR1, SMSTPCR1, TMU0_MSTP125 | TMU1_MSTP124);
+	/* SCIF1 */
+	mstp_clrbits_le32(MSTPSR2, SMSTPCR2, SCIF1_MSTP206);
+	/* eMMC */
+	mstp_clrbits_le32(MSTPSR3, SMSTPCR3, SD1_MSTP313 | SD2_MSTP312);
+	/* SDHI0, 3 */
+	mstp_clrbits_le32(MSTPSR3, SMSTPCR3, SD0_MSTP314 | SD3_MSTP311);
+
+	writel(SDH800_SD200, SD3CKCR);
+
+	return 0;
+}
+
+DECLARE_GLOBAL_DATA_PTR;
+int board_init(void)
+{
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
+
+	/* Init PFC controller */
+	r8a7795_pinmux_init();
+
+	return 0;
+}
+
+#define MAHR 0xE68005C0
+#define MALR 0xE68005C8
+int board_eth_init(bd_t *bis)
+{
+	int ret = -ENODEV;
+	u32 val;
+	unsigned char enetaddr[6];
+
+	if (!eth_getenv_enetaddr("ethaddr", enetaddr))
+		return ret;
+
+	/* Set Mac address */
+	val = enetaddr[0] << 24 | enetaddr[1] << 16 |
+	    enetaddr[2] << 8 | enetaddr[3];
+	writel(val, MAHR);
+
+	val = enetaddr[4] << 8 | enetaddr[5];
+	writel(val, MALR);
+
+	return ret;
+}
+
+/* Salvator-X has KSZ9031RNX */
+/* Tri-color dual-LED mode(Pin 41 pull-down) */
+int board_phy_config(struct phy_device *phydev)
+{
+	/* hardware use default(Tri-color:0) setting. */
+
+	return 0;
+}
+
+int board_mmc_init(bd_t *bis)
+{
+	int ret = -ENODEV;
+
+#if 0 /* gen3 */
+	/* MMC */
+	gpio_request(GPIO_GP_3_11, NULL);
+	gpio_request(GPIO_GP_3_10, NULL);
+	gpio_request(GPIO_GP_3_9, NULL);
+	gpio_request(GPIO_GP_3_8, NULL);
+
+	gpio_request(GPIO_GP_4_5, NULL);
+	gpio_request(GPIO_GP_4_4, NULL);
+	gpio_request(GPIO_GP_4_3, NULL);
+	gpio_request(GPIO_GP_4_2, NULL);
+	gpio_request(GPIO_GP_4_1, NULL);
+	gpio_request(GPIO_GP_4_0, NULL);
+	gpio_request(GPIO_GP_4_6, NULL);
+
+	ret = mmcif_mmc_init();
+#endif
+
+#ifdef CONFIG_SH_SDHI
+	/* SDHI0 */
+	gpio_request(GPIO_GFN_SD0_DAT0, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_DAT0, 1);
+	gpio_request(GPIO_GFN_SD0_DAT1, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_DAT1, 1);
+	gpio_request(GPIO_GFN_SD0_DAT2, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_DAT2, 1);
+	gpio_request(GPIO_GFN_SD0_DAT3, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_DAT3, 1);
+	gpio_request(GPIO_GFN_SD0_CLK, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_CLK, 1);
+	gpio_request(GPIO_GFN_SD0_CMD, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_CMD, 1);
+	gpio_request(GPIO_GFN_SD0_CD, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_CD, 1);
+	gpio_request(GPIO_GFN_SD0_WP, NULL);
+	gpio_direction_output(GPIO_GFN_SD0_WP, 1);
+
+	/* SDHI3 */
+	gpio_request(GPIO_FN_SD3_DAT0, NULL);	/* GP_4_9 */
+	gpio_direction_output(GPIO_FN_SD3_DAT0, 1);
+	gpio_request(GPIO_FN_SD3_DAT1, NULL);	/* GP_4_10 */
+	gpio_direction_output(GPIO_FN_SD3_DAT1, 1);
+	gpio_request(GPIO_FN_SD3_DAT2, NULL);	/* GP_4_11 */
+	gpio_direction_output(GPIO_FN_SD3_DAT2, 1);
+	gpio_request(GPIO_FN_SD3_DAT3, NULL);	/* GP_4_12 */
+	gpio_direction_output(GPIO_FN_SD3_DAT3, 1);
+	gpio_request(GPIO_FN_SD3_CLK, NULL);	/* GP_4_7 */
+	gpio_direction_output(GPIO_FN_SD3_CLK, 1);
+	gpio_request(GPIO_FN_SD3_CMD, NULL);	/* GP_4_8 */
+	gpio_direction_output(GPIO_FN_SD3_CMD, 1);
+	gpio_request(GPIO_FN_SD3_CD, NULL);	/* GP_4_15 */
+	gpio_direction_output(GPIO_FN_SD3_CD, 1);
+	gpio_request(GPIO_FN_SD3_WP, NULL);	/* GP_4_16 */
+	gpio_direction_output(GPIO_FN_SD3_WP, 1);
+
+	/* SDHI0 */
+	gpio_request(GPIO_GP_5_2, NULL);
+	gpio_request(GPIO_GP_5_1, NULL);
+	gpio_direction_output(GPIO_GP_5_2, 1);	/* power on */
+	gpio_direction_output(GPIO_GP_5_1, 1);	/* 1: 3.3V, 0: 1.8V */
+
+	ret = sh_sdhi_init(CONFIG_SYS_SH_SDHI0_BASE, 0,
+			   SH_SDHI_QUIRK_16BIT_BUF);
+	if (ret)
+		return ret;
+
+	/* SDHI 3 */
+	gpio_request(GPIO_GP_3_15, NULL);
+	gpio_request(GPIO_GP_3_14, NULL);
+	gpio_direction_output(GPIO_GP_3_15, 1);	/* power on */
+	gpio_direction_output(GPIO_GP_3_14, 1);	/* 1: 3.3V, 0: 1.8V */
+
+	ret = sh_sdhi_init(CONFIG_SYS_SH_SDHI3_BASE, 2, 0);
+#endif
+	return ret;
+}
+
+
+int dram_init(void)
+{
+	gd->ram_size = CONFIG_SYS_SDRAM_SIZE;
+
+	return 0;
+}
+
+const struct rcar_sysinfo sysinfo = {
+	CONFIG_RCAR_BOARD_STRING
+};
+
+
+#define RST_BASE	0xE6160000
+#define RST_CA57RESCNT	(RST_BASE + 0x40)
+#define RST_CA53RESCNT	(RST_BASE + 0x44)
+#define RST_RSTOUTCR	(RST_BASE + 0x58)
+
+
+void reset_cpu(ulong addr)
+{
+	/* only CA57 ? */
+	writel(0xA5A5000F, RST_CA57RESCNT);
+}
+
+static const struct sh_serial_platdata serial_platdata = {
+	.base = SCIF1_BASE,
+	.type = PORT_SCIF,
+	.clk = 14745600,		/* 0xE10000 */
+	.clk_mode = EXT_CLK,
+};
+
+U_BOOT_DEVICE(salvatorx_serial1) = {
+	.name = "serial_sh1",
+	.platdata = &serial_platdata,
+};
-- 
1.8.3.2

